Index: src/main/java/engineering/pattern/Singleton.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package engineering.pattern;\r\n\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport modelli.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Singleton {\r\n\r\n    //variabile statica che contiene l'istanza della classe\r\n    private static Singleton instance;\r\n\r\n    //variabili private dove vengono salvate le istanze\r\n    private List<Utente> utenti = new ArrayList<>();;\r\n\r\n    private Singleton(){}\r\n\r\n    // static block initialization for exception handling\r\n    static {\r\n        try {\r\n            instance = new Singleton();\r\n        } catch (EccezioneGenerica e) {\r\n            throw new EccezioneGenerica(\"Exception occurred in creating singleton instance\");\r\n        }\r\n    }\r\n\r\n    public static Singleton getInstance() {\r\n        return instance;\r\n    }\r\n\r\n    //metodi pubblici per ottenere le istanze di tutti gli utenti istanziati nel sistema\r\n    public void aggiungiUtente(Utente utente) {utenti.add(utente);}\r\n\r\n    public List<Utente> getUtenti() {return utenti;}\r\n    public Boolean esisteUtenteDaUtente(Utente utente) {return esisteUtenteDaEmail(utente.getEmail());}\r\n    public Utente getUtenteDaLogin(Login login) throws EccezioneGenerica {return getUtenteDaEmail(login.getEmail());}\r\n\r\n    public Boolean esisteUtenteDaLogin(Login login) {\r\n        for (Utente utente : utenti)\r\n        {\r\n\r\n            if (utente.getEmail().equals(login.getEmail()) && utente.getPassword().equals(login.getPassword()))\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public Boolean esisteUtenteDaEmail(String email) {\r\n        for (Utente utente : utenti)\r\n        {\r\n            if (utente.getEmail().equals(email))\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public Utente getUtenteDaEmail(String email) throws EccezioneGenerica {\r\n        for (Utente utente : utenti)\r\n        {\r\n            if (utente.getEmail().equals(email))\r\n            {\r\n                return utente;\r\n            }\r\n        }\r\n        throw new EccezioneGenerica(\"Utente non esistente\");\r\n    }\r\n\r\n    public void aggiungiRegistrazione(Registrazione registrazione){\r\n        if (registrazione.getAllenatore()) {\r\n            utenti.add(new Allenatore(registrazione.getUsername(),registrazione.getEmail(), registrazione.getPassword()));\r\n        } else {\r\n            utenti.add(new Giocatore(registrazione.getUsername(),registrazione.getEmail(), registrazione.getPassword()));\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/engineering/pattern/Singleton.java b/src/main/java/engineering/pattern/Singleton.java
--- a/src/main/java/engineering/pattern/Singleton.java	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/java/engineering/pattern/Singleton.java	(date 1736181013372)
@@ -12,7 +12,10 @@
     private static Singleton instance;
 
     //variabili private dove vengono salvate le istanze
-    private List<Utente> utenti = new ArrayList<>();;
+    private List<Utente> utenti = new ArrayList<>();
+
+    //variabile privata che contiene l'istanza dell'utente che sta facendo uso del sistema
+    private Utente utenteCorrente;
 
     private Singleton(){}
 
@@ -32,14 +35,27 @@
     //metodi pubblici per ottenere le istanze di tutti gli utenti istanziati nel sistema
     public void aggiungiUtente(Utente utente) {utenti.add(utente);}
 
+    public Utente getUtenteCorrente() {return utenteCorrente;}
+    public void setUtenteCorrente(Utente utente) {utenteCorrente = utente;}
+
     public List<Utente> getUtenti() {return utenti;}
     public Boolean esisteUtenteDaUtente(Utente utente) {return esisteUtenteDaEmail(utente.getEmail());}
+
+    public Boolean esisteSquadraDaNome(String nome) {
+        for (Utente utente : utenti) {
+            if (utente instanceof Allenatore allenatore) {
+                Squadra squadra = allenatore.getSquadra();
+                if (squadra.getNome().equals(nome)) {
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
+
     public Utente getUtenteDaLogin(Login login) throws EccezioneGenerica {return getUtenteDaEmail(login.getEmail());}
-
     public Boolean esisteUtenteDaLogin(Login login) {
-        for (Utente utente : utenti)
-        {
-
+        for (Utente utente : utenti) {
             if (utente.getEmail().equals(login.getEmail()) && utente.getPassword().equals(login.getPassword()))
             {
                 return true;
@@ -49,10 +65,8 @@
     }
 
     public Boolean esisteUtenteDaEmail(String email) {
-        for (Utente utente : utenti)
-        {
-            if (utente.getEmail().equals(email))
-            {
+        for (Utente utente : utenti) {
+            if (utente.getEmail().equals(email)) {
                 return true;
             }
         }
Index: src/main/java/controllerApplicativo/CreazioneSquadraControllerApplicativo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllerApplicativo;\r\n\r\nimport engineering.bean.UtenteBean;\r\nimport engineering.dao.*;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport engineering.pattern.Singleton;\r\nimport modelli.Allenatore;\r\nimport modelli.Giocatore;\r\nimport modelli.Squadra;\r\nimport modelli.Utente;\r\n\r\npublic class CreazioneSquadraControllerApplicativo {\r\n\r\n    public CreazioneSquadraControllerApplicativo() {}\r\n\r\n    public void creazioneSquadra(UtenteBean utenteBean, String nomeSquadra) throws EccezioneGenerica {\r\n        try {\r\n            //implementazione della logica per la creazione della squadra\r\n            // nel caso JSON\r\n            SquadraDAO squadraDAO = new SquadraDAOJSON();\r\n\r\n            //caso MySQL\r\n            //SquadraDAO squadraDAO = new SquadraDAOMySQL();\r\n\r\n            System.out.println(\"Tento di creare la squadra: \" + nomeSquadra);\r\n\r\n\r\n            //dato il bean passato dal controller grafico, recupero il modello dalla memoria locale\r\n            Singleton instance = Singleton.getInstance();\r\n\r\n            //modifico il modello nella memoria centrale\r\n\r\n            //non dovrebbe essere necessario recuperare l'utente\r\n            //RIVEDERE SE Ã¨ CORRETTO FARE QUESTA ASSEGNAZIONE\r\n            //Utente utente = instance.getUtenteDaEmail(utenteBean.getEmail());\r\n            Utente utente;\r\n            if (utenteBean.getAllenatore()) {\r\n                utente = new Allenatore(utenteBean.getUsername(), utenteBean.getEmail(), utenteBean.getPassword(), utenteBean.getAllenamenti(),utenteBean.getSquadra());\r\n            }\r\n            else {\r\n                utente = new Allenatore(utenteBean.getUsername(), utenteBean.getEmail(), utenteBean.getPassword(), utenteBean.getAllenamenti(),utenteBean.getSquadra());\r\n            }\r\n            utente.setSquadra(new Squadra(nomeSquadra));\r\n\r\n            //inoltre aggiorno la rappresentazione del modello nella persistenza\r\n            squadraDAO.creaSquadraPerAllenatore(utente, utente.getSquadra());\r\n\r\n            //completata l'applicazione della logica, posso mostrare qualche tipo di feedback\r\n            System.out.println(\"completato con successo\");\r\n\r\n            //cambio di scena tornando alla pagina principale\r\n        }\r\n        catch (EccezioneGenerica e)\r\n        {\r\n            throw new EccezioneGenerica(e.getMessage());\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllerApplicativo/CreazioneSquadraControllerApplicativo.java b/src/main/java/controllerApplicativo/CreazioneSquadraControllerApplicativo.java
--- a/src/main/java/controllerApplicativo/CreazioneSquadraControllerApplicativo.java	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/java/controllerApplicativo/CreazioneSquadraControllerApplicativo.java	(date 1736183021653)
@@ -4,6 +4,7 @@
 import engineering.dao.*;
 import engineering.eccezioni.EccezioneGenerica;
 import engineering.pattern.Singleton;
+import engineering.pattern.abstract_factory.DAOFactory;
 import modelli.Allenatore;
 import modelli.Giocatore;
 import modelli.Squadra;
@@ -13,33 +14,23 @@
 
     public CreazioneSquadraControllerApplicativo() {}
 
-    public void creazioneSquadra(UtenteBean utenteBean, String nomeSquadra) throws EccezioneGenerica {
+    public void creazioneSquadra(String nomeSquadra) throws EccezioneGenerica {
         try {
-            //implementazione della logica per la creazione della squadra
-            // nel caso JSON
-            SquadraDAO squadraDAO = new SquadraDAOJSON();
 
-            //caso MySQL
-            //SquadraDAO squadraDAO = new SquadraDAOMySQL();
+            //istanzio il dao per la squadra
+            SquadraDAO squadraDAO = DAOFactory.getDAOFactory().createSquadraDAO();
 
             System.out.println("Tento di creare la squadra: " + nomeSquadra);
 
-
-            //dato il bean passato dal controller grafico, recupero il modello dalla memoria locale
-            Singleton instance = Singleton.getInstance();
-
-            //modifico il modello nella memoria centrale
+            //ottengo il singleton per ricavare l'utente che sta creando la squadra
+            Singleton istanza = Singleton.getInstance();
+            Utente utente = istanza.getUtenteCorrente();
 
-            //non dovrebbe essere necessario recuperare l'utente
-            //RIVEDERE SE Ã¨ CORRETTO FARE QUESTA ASSEGNAZIONE
-            //Utente utente = instance.getUtenteDaEmail(utenteBean.getEmail());
-            Utente utente;
-            if (utenteBean.getAllenatore()) {
-                utente = new Allenatore(utenteBean.getUsername(), utenteBean.getEmail(), utenteBean.getPassword(), utenteBean.getAllenamenti(),utenteBean.getSquadra());
-            }
-            else {
-                utente = new Allenatore(utenteBean.getUsername(), utenteBean.getEmail(), utenteBean.getPassword(), utenteBean.getAllenamenti(),utenteBean.getSquadra());
+            if (istanza.esisteSquadraDaNome(nomeSquadra) ){
+                throw new EccezioneGenerica("squadra esistente");
             }
+
+            //modifico il modello Utente con la squadra che stiamo creando
             utente.setSquadra(new Squadra(nomeSquadra));
 
             //inoltre aggiorno la rappresentazione del modello nella persistenza
@@ -48,10 +39,18 @@
             //completata l'applicazione della logica, posso mostrare qualche tipo di feedback
             System.out.println("completato con successo");
 
-            //cambio di scena tornando alla pagina principale
+            //cambio di scena tornando alla pagina principale implementato nel controller grafico in questo caso in modo temporaneo
+
         }
         catch (EccezioneGenerica e)
         {
+            //ottengo il singleton per ricavare l'utente che sta creando la squadra
+            Singleton istanza = Singleton.getInstance();
+            Utente utente = istanza.getUtenteCorrente();
+
+            //modifico il modello Utente con la squadra che stiamo creando
+            utente.setSquadra(new Squadra(""));
+            System.out.println("Errore nella creazione della squadra");
             throw new EccezioneGenerica(e.getMessage());
         }
     }
Index: src/main/java/viste/first/CreazioneSquadraControllerGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package viste.first;\r\n\r\nimport controllerApplicativo.CreazioneSquadraControllerApplicativo;\r\nimport engineering.bean.AllenatoreBean;\r\nimport engineering.bean.UtenteBean;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.stage.Stage;\r\nimport viste.first.utils.CambioScena;\r\n\r\nimport static viste.first.utils.FxmlFileName.*;\r\n\r\npublic class CreazioneSquadraControllerGrafico {\r\n\r\n    @FXML\r\n    private TextField nomeSquadra;\r\n\r\n    @FXML\r\n    private Button creaSquadra;\r\n\r\n    @FXML\r\n    private Label messaggioErrore;\r\n\r\n\r\n    public void initialize() {\r\n        System.out.println(\"Inizializzazione Temporanea della creazione della squadra\");\r\n    }\r\n\r\n    @FXML\r\n    public void CreaSquadra(ActionEvent actionEvent) {\r\n\r\n        if (nomeSquadra.getText().isEmpty()) {\r\n            messaggioErrore.setText(\"There are empty fields!\");\r\n            messaggioErrore.setVisible(true);\r\n        }\r\n\r\n        else\r\n        {\r\n            System.out.println(\"Nome squadra: \" + nomeSquadra.getText());\r\n            //implementazione della logica per la creazione della squadra\r\n\r\n            CreazioneSquadraControllerApplicativo creazioneSquadraControllerApplicativo = new CreazioneSquadraControllerApplicativo();\r\n\r\n            //creazione di un utente di prova\r\n            UtenteBean utenteBeanDiProva= new AllenatoreBean(\"UserProva\",\"a\", \"1\");\r\n\r\n            //creazione della squadra con il nome inserito dall'utente e lo lego all'utenteBean\r\n            creazioneSquadraControllerApplicativo.creazioneSquadra(utenteBeanDiProva, nomeSquadra.getText());\r\n\r\n            //finita la logica cambio scena\r\n            //CODICE TEMPORANEO PER IL PASSAGGIO DI SCENE ALLA PAGINA DI REGISTRAZIONE\r\n            try {\r\n                Stage stage = (Stage) nomeSquadra.getScene().getWindow();\r\n                CambioScena cambioScena = new CambioScena();\r\n                cambioScena.cambioScena(stage, PAGINA_HOME);\r\n\r\n            } catch (EccezioneGenerica EccezioneGenerica) {\r\n                System.out.println(EccezioneGenerica.getMessage());\r\n            }\r\n        }\r\n\r\n\r\n        //implementazione della logica per il controllo della corretta formattazione del nome della squadra\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/viste/first/CreazioneSquadraControllerGrafico.java b/src/main/java/viste/first/CreazioneSquadraControllerGrafico.java
--- a/src/main/java/viste/first/CreazioneSquadraControllerGrafico.java	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/java/viste/first/CreazioneSquadraControllerGrafico.java	(date 1736182848791)
@@ -4,6 +4,7 @@
 import engineering.bean.AllenatoreBean;
 import engineering.bean.UtenteBean;
 import engineering.eccezioni.EccezioneGenerica;
+import engineering.pattern.Singleton;
 import javafx.event.ActionEvent;
 import javafx.fxml.FXML;
 import javafx.scene.control.Button;
@@ -32,35 +33,35 @@
 
     @FXML
     public void CreaSquadra(ActionEvent actionEvent) {
-
-        if (nomeSquadra.getText().isEmpty()) {
-            messaggioErrore.setText("There are empty fields!");
-            messaggioErrore.setVisible(true);
-        }
+        try {
+            if (nomeSquadra.getText().isEmpty()) {
+                messaggioErrore.setText("There are empty fields!");
+                messaggioErrore.setVisible(true);
 
-        else
-        {
-            System.out.println("Nome squadra: " + nomeSquadra.getText());
-            //implementazione della logica per la creazione della squadra
+            } else {
+                System.out.println("Nome squadra: " + nomeSquadra.getText());
+                //implementazione della logica per la creazione della squadra
 
-            CreazioneSquadraControllerApplicativo creazioneSquadraControllerApplicativo = new CreazioneSquadraControllerApplicativo();
+                //inizializziamo il controller applicativo
+                CreazioneSquadraControllerApplicativo creazioneSquadraControllerApplicativo = new CreazioneSquadraControllerApplicativo();
 
-            //creazione di un utente di prova
-            UtenteBean utenteBeanDiProva= new AllenatoreBean("UserProva","a", "1");
-
-            //creazione della squadra con il nome inserito dall'utente e lo lego all'utenteBean
-            creazioneSquadraControllerApplicativo.creazioneSquadra(utenteBeanDiProva, nomeSquadra.getText());
+                //creazione della squadra con il nome inserito dall'utente e lo lego all'utenteBean
+                creazioneSquadraControllerApplicativo.creazioneSquadra(nomeSquadra.getText());
 
-            //finita la logica cambio scena
-            //CODICE TEMPORANEO PER IL PASSAGGIO DI SCENE ALLA PAGINA DI REGISTRAZIONE
-            try {
-                Stage stage = (Stage) nomeSquadra.getScene().getWindow();
-                CambioScena cambioScena = new CambioScena();
-                cambioScena.cambioScena(stage, PAGINA_HOME);
+                //finita la logica cambio la scena
+                //CODICE TEMPORANEO PER IL PASSAGGIO DI SCENE ALLA PAGINA DI REGISTRAZIONE
+                try {
+                    Stage stage = (Stage) nomeSquadra.getScene().getWindow();
+                    CambioScena cambioScena = new CambioScena();
+                    cambioScena.cambioScena(stage, PAGINA_HOME);
 
-            } catch (EccezioneGenerica EccezioneGenerica) {
-                System.out.println(EccezioneGenerica.getMessage());
+                } catch (EccezioneGenerica EccezioneGenerica) {
+                    System.out.println(EccezioneGenerica.getMessage());
+                }
             }
+        } catch (EccezioneGenerica e) {
+            messaggioErrore.setText(e.getMessage());
+            messaggioErrore.setVisible(true);
         }
 
 
Index: src/main/resources/persistenza/utenti/1.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"username\": \"qewq\",\r\n  \"email\": \"1\",\r\n  \"password\": \"1\",\r\n  \"allenatore\": true,\r\n  \"allenamenti\": [],\r\n  \"squadra\": \"\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/persistenza/utenti/1.json b/src/main/resources/persistenza/utenti/1.json
--- a/src/main/resources/persistenza/utenti/1.json	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/resources/persistenza/utenti/1.json	(date 1736183068031)
@@ -4,5 +4,5 @@
   "password": "1",
   "allenatore": true,
   "allenamenti": [],
-  "squadra": ""
+  "squadra": "lollo"
 }
\ No newline at end of file
Index: src/main/java/engineering/dao/SquadraDAOJSON.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package engineering.dao;\r\n\r\nimport com.google.gson.*;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport modelli.Squadra;\r\nimport modelli.Utente;\r\n\r\nimport java.io.FileReader;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\n\r\npublic class SquadraDAOJSON implements SquadraDAO {\r\n\r\n    public SquadraDAOJSON() {}\r\n\r\n    public void creaSquadraPerAllenatore(Utente utente, Squadra squadra) {\r\n\r\n        try {\r\n            creaSquadra(squadra, utente);\r\n            IscrizioneUtenteASquadra(utente, squadra);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void IscrizioneUtenteASquadra(Utente utente, Squadra squadra) {\r\n\r\n        try {\r\n            System.out.println(\"Iscrizione dell'utente \" + utente.getEmail() + \"alla squadra: \" + squadra.getNome());\r\n            utente.setSquadra(squadra);\r\n\r\n            UtenteDAOJSON utenteDAOJSON = new UtenteDAOJSON();\r\n            utenteDAOJSON.aggiornaUtente(utente);\r\n\r\n        } catch (Exception e) {\r\n            System.out.println(\"Errore nell'iscrizione dell'utente alla squadra\");\r\n        }\r\n    }\r\n\r\n    public void visualizzaTutteLeSquadre() {\r\n        System.out.println(\"Visualizzazione di tutte le squadre\");\r\n    }\r\n\r\n\r\n    public void creaSquadra(Squadra squadra, Utente utente) {\r\n        try {\r\n            //Creazione del path\r\n            String filePath = \"src/main/resources/persistenza/squadre/\" + squadra.getNome() + \".json\";\r\n\r\n            try {\r\n                //controllo che il file sia giÃ  esistente\r\n                Files.readAllBytes(Paths.get(filePath));\r\n\r\n                //se il file esiste, una squadra con lo stesso nome esiste giÃ  e lancio un'eccezione\r\n                throw new EccezioneGenerica(\"squadra esistente\");\r\n\r\n            } catch (IOException e) {\r\n                //creazione del file con nome username dell'utente in formato json\r\n\r\n                // Create a Gson object\r\n                Gson gson = new GsonBuilder().setPrettyPrinting().create();\r\n                FileWriter writer = new FileWriter(filePath);\r\n\r\n                JsonObject jsonObject = new JsonObject();\r\n                jsonObject.addProperty(\"allenatore\", utente.getEmail());\r\n                jsonObject.addProperty(\"nome\", squadra.getNome());\r\n\r\n                //salvataggio dell'oggetto serializzato utente nel file json\r\n                writer.write(gson.toJson(jsonObject));\r\n                writer.close();\r\n\r\n\r\n\r\n                //capire se qui devo effettivamente lanciare questa eccezione\r\n                //throw new EccezioneGenerica(\"squadra inserita\");\r\n            }\r\n\r\n\r\n        } catch (Exception e) {\r\n            throw new EccezioneGenerica(e.getMessage());\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/engineering/dao/SquadraDAOJSON.java b/src/main/java/engineering/dao/SquadraDAOJSON.java
--- a/src/main/java/engineering/dao/SquadraDAOJSON.java	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/java/engineering/dao/SquadraDAOJSON.java	(date 1736181421668)
@@ -21,7 +21,7 @@
             creaSquadra(squadra, utente);
             IscrizioneUtenteASquadra(utente, squadra);
         } catch (Exception e) {
-            e.printStackTrace();
+            throw new EccezioneGenerica(e.getMessage());
         }
     }
 
@@ -29,7 +29,8 @@
 
         try {
             System.out.println("Iscrizione dell'utente " + utente.getEmail() + "alla squadra: " + squadra.getNome());
-            utente.setSquadra(squadra);
+            //poichÃ© Ã¨ il sistema a modificare i modelli e non il dao, non c'Ã¨ bisogno di fare il setSquadra
+            //utente.setSquadra(squadra);
 
             UtenteDAOJSON utenteDAOJSON = new UtenteDAOJSON();
             utenteDAOJSON.aggiornaUtente(utente);
Index: src/main/resources/persistenza/utenti/a.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"username\": \"UserProva\",\r\n  \"email\": \"a\",\r\n  \"password\": \"1\",\r\n  \"allenatore\": true,\r\n  \"allenamenti\": [],\r\n  \"squadra\": \"\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/persistenza/utenti/a.json b/src/main/resources/persistenza/utenti/a.json
--- a/src/main/resources/persistenza/utenti/a.json	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/resources/persistenza/utenti/a.json	(date 1736165303697)
@@ -3,6 +3,9 @@
   "email": "a",
   "password": "1",
   "allenatore": true,
-  "allenamenti": [],
-  "squadra": ""
+  "allenamenti": [
+    "13-9-2050",
+    "19-9-2039"
+  ],
+  "squadra": "nonDeveFunzionare"
 }
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_12_2024_12_59_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_12_2024_12_59_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_29_12_2024_12_59_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_12_2024_12_59_[Changes]/shelved.patch	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ /dev/null	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
@@ -1,136 +0,0 @@
-Index: src/main/resources/persistenza/squadre/lollo.json
-===================================================================
-diff --git a/src/main/resources/persistenza/squadre/lollo.json b/src/main/resources/persistenza/squadre/lollo.json
-deleted file mode 100644
---- a/src/main/resources/persistenza/squadre/lollo.json	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-+++ /dev/null	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-@@ -1,3 +0,0 @@
--{
--  "nome": "lollo"
--}
-\ No newline at end of file
-Index: src/main/resources/persistenza/utenti/jlskkndjaksn.json
-===================================================================
-diff --git a/src/main/resources/persistenza/utenti/jlskkndjaksn.json b/src/main/resources/persistenza/utenti/jlskkndjaksn.json
-deleted file mode 100644
---- a/src/main/resources/persistenza/utenti/jlskkndjaksn.json	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-+++ /dev/null	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-@@ -1,4 +0,0 @@
--{
--  "email": "jlskkndjaksn",
--  "password": "1234"
--}
-\ No newline at end of file
-Index: src/main/resources/persistenza/utenti/simone.json
-===================================================================
-diff --git a/src/main/resources/persistenza/utenti/simone.json b/src/main/resources/persistenza/utenti/simone.json
-deleted file mode 100644
---- a/src/main/resources/persistenza/utenti/simone.json	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-+++ /dev/null	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-@@ -1,19 +0,0 @@
--{
--  "email": "simone",
--  "password": "123",
--  "allenatore" : true,
--  "username" : "simsalabin",  
--  "Allenamento" :
--  [
--    {
--      "data": "2021-06-01",
--      "durata": "1:30",
--      "tipo": "corsa"
--    },
--    {
--      "data": "2021-06-02",
--      "durata": "1:00",
--      "tipo": "ciclismo"
--    }
--  ]
--}
-\ No newline at end of file
-Index: src/main/resources/persistenza/utenti/francesco.json
-===================================================================
-diff --git a/src/main/resources/persistenza/utenti/francesco.json b/src/main/resources/persistenza/utenti/francesco.json
-deleted file mode 100644
---- a/src/main/resources/persistenza/utenti/francesco.json	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-+++ /dev/null	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-@@ -1,4 +0,0 @@
--{
--  "email": "francesco",
--  "password": "12345"
--}
-\ No newline at end of file
-Index: src/main/resources/persistenza/utenti/pippo.json
-===================================================================
-diff --git a/src/main/resources/persistenza/utenti/pippo.json b/src/main/resources/persistenza/utenti/pippo.json
-deleted file mode 100644
---- a/src/main/resources/persistenza/utenti/pippo.json	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-+++ /dev/null	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-@@ -1,8 +0,0 @@
--{
--  "username": "pippo",
--  "allenatore": false,
--  "email": "pippo",
--  "password": "pippo@gmail.com",
--  "Squadra": "",
--  "allenamenti": []
--}
-\ No newline at end of file
-Index: src/main/resources/persistenza/squadre/nomeDiProva.json
-===================================================================
-diff --git a/src/main/resources/persistenza/squadre/nomeDiProva.json b/src/main/resources/persistenza/squadre/nomeDiProva.json
-deleted file mode 100644
---- a/src/main/resources/persistenza/squadre/nomeDiProva.json	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-+++ /dev/null	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-@@ -1,3 +0,0 @@
--{
--  "nome": "nomeDiProva"
--}
-\ No newline at end of file
-Index: src/main/resources/persistenza/utenti/a.json
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/resources/persistenza/utenti/a.json b/src/main/resources/persistenza/utenti/a.json
-deleted file mode 100644
---- a/src/main/resources/persistenza/utenti/a.json	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-+++ /dev/null	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-@@ -1,10 +0,0 @@
--{
--  "username": "prova",
--  "email": "a",
--  "password": "1",
--  "allenatore": true,
--  "allenamenti": [
--    "10-5-3000"
--  ],
--  "squadra": ""
--}
-\ No newline at end of file
-Index: src/main/resources/persistenza/utenti/Username di Prova.json
-===================================================================
-diff --git a/src/main/resources/persistenza/utenti/Username di Prova.json b/src/main/resources/persistenza/utenti/Username di Prova.json
-deleted file mode 100644
---- a/src/main/resources/persistenza/utenti/Username di Prova.json	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-+++ /dev/null	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-@@ -1,6 +0,0 @@
--{
--  "username": "Username di Prova",
--  "allenatore": false,
--  "email": "simons",
--  "password": "1234"
--}
-\ No newline at end of file
-Index: src/main/resources/persistenza/utenti/utente.json
-===================================================================
-diff --git a/src/main/resources/persistenza/utenti/utente.json b/src/main/resources/persistenza/utenti/utente.json
-deleted file mode 100644
---- a/src/main/resources/persistenza/utenti/utente.json	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-+++ /dev/null	(revision 2e9a8686929e225afe1b5ccf621779e8357ab9b7)
-@@ -1,4 +0,0 @@
--{
--  "email": "cnkasjnckj",
--  "password": "1231242"
--}
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_12_2024_12_59__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_12_2024_12_59__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_29_12_2024_12_59__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_12_2024_12_59__Changes_.xml	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ /dev/null	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_29_12_2024_12_59_[Changes]" date="1735473568344" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_12_2024_12_59_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 29/12/2024 12:59 [Changes]" />
-</changelist>
\ No newline at end of file
Index: src/main/java/engineering/dao/SquadraDAOMySQL.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package engineering.dao;\r\n\r\nimport engineering.altro.Connessione;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport engineering.query.QuerySquadra;\r\nimport modelli.*;\r\n\r\nimport java.sql.*;\r\n\r\n\r\nimport static engineering.query.QuerySquadra.*;\r\n\r\npublic class SquadraDAOMySQL implements SquadraDAO {\r\n\r\n    public SquadraDAOMySQL() {}\r\n\r\n    public void creaSquadraPerAllenatore(Utente utente, Squadra squadra) {\r\n        try{\r\n            System.out.println(\"Creazione della squadra per l'allenatore\");\r\n\r\n            creaSquadra(squadra, utente);\r\n            IscrizioneUtenteASquadra(utente, squadra);\r\n        }\r\n        catch (EccezioneGenerica e)\r\n        {\r\n            throw new EccezioneGenerica(e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void creaSquadra(Squadra squadra, Utente utente) {\r\n        Connection conn;\r\n        int righeModificate = 0;\r\n\r\n        //apriamo la connessione con il DB\r\n\r\n        conn = Connessione.getInstance().getDBConnection();\r\n        if (conn != null) {\r\n            try\r\n            {\r\n                //invocazione del metodo per la ricerca dell'utente in funzione della email\r\n                righeModificate = QuerySquadra.createSquadra(conn, squadra.getNome(), utente.getEmail());\r\n\r\n                System.out.println(\"Creazione della squadra con nome: \" + squadra.getNome() + \" e utente_email: \" + utente.getEmail());\r\n\r\n                //controllo di aver modificato 1 riga nel DB prima di completare il codice\r\n                if (righeModificate==0)\r\n                {\r\n                    throw new EccezioneGenerica(\"Errore nella creazione della squadra\");\r\n                }\r\n            }\r\n            catch(EccezioneGenerica e) {\r\n                throw new EccezioneGenerica(e.getMessage());\r\n            }\r\n        }\r\n        else {\r\n            System.out.println(\"Connessione con il DB non riuscita nella creazione della squadra\");\r\n            throw new EccezioneGenerica(\"Connessione con il DB non riuscita nella creazione della squadra\");\r\n        }\r\n\r\n    }\r\n\r\n    public void IscrizioneUtenteASquadra(Utente utente, Squadra squadra) {\r\n        //effettivamente noi non iscriviamo l'utente alla squadra, ma possiamo immaginare che il metodo faccia qualcosa\r\n        System.out.println(\"Iscrizione dell'utente alla squadra\");\r\n    }\r\n    public void visualizzaTutteLeSquadre() {\r\n        System.out.println(\"Visualizzazione di tutte le squadre\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/engineering/dao/SquadraDAOMySQL.java b/src/main/java/engineering/dao/SquadraDAOMySQL.java
--- a/src/main/java/engineering/dao/SquadraDAOMySQL.java	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/java/engineering/dao/SquadraDAOMySQL.java	(date 1736165197112)
@@ -62,9 +62,9 @@
 
     public void IscrizioneUtenteASquadra(Utente utente, Squadra squadra) {
         //effettivamente noi non iscriviamo l'utente alla squadra, ma possiamo immaginare che il metodo faccia qualcosa
-        System.out.println("Iscrizione dell'utente alla squadra");
+        System.out.println("Iscrizione dell'utente alla squadra non implementa niente di significativo");
     }
     public void visualizzaTutteLeSquadre() {
-        System.out.println("Visualizzazione di tutte le squadre");
+        System.out.println("Visualizzazione di tutte le squadre non implementato");
     }
 }
Index: src/main/java/controllerApplicativo/LoginControllerApplicativo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllerApplicativo;\r\n\r\nimport engineering.bean.*;\r\nimport engineering.dao.UtenteDAO;\r\nimport engineering.dao.UtenteDAOJSON;\r\nimport engineering.dao.UtenteDAOMySQL;\r\nimport engineering.pattern.Singleton;\r\nimport engineering.pattern.abstract_factory.DAOFactory;\r\nimport modelli.Allenatore;\r\nimport modelli.Giocatore;\r\nimport modelli.Login;\r\nimport modelli.Utente;\r\n\r\npublic class LoginControllerApplicativo {\r\n\r\n    public LoginControllerApplicativo() {\r\n    }\r\n\r\n    public Boolean verificaCredenziali(LoginBean loginBean) {\r\n\r\n        //controllo delle credenziali\r\n        try {\r\n\r\n            //creo un utente da passare all'interno del sistema\r\n            Login login = new Login(loginBean.getEmail(), loginBean.getPassword());\r\n            UtenteDAO utenteDao = DAOFactory.getDAOFactory().createUtenteDAO();\r\n\r\n\r\n\r\n            //vedo se l'utente esiste nel singleton\r\n            Singleton istanza=Singleton.getInstance();\r\n\r\n            //se esiste ritorno true\r\n            if(istanza.esisteUtenteDaLogin(login)) {\r\n                return true;}\r\n\r\n            else {\r\n                System.out.println(\"Login in corso\");\r\n                //recupero l'utente dal login e lo restituisco\r\n                return utenteDao.esisteUtenteDaLogin(login);\r\n            }\r\n        }\r\n\r\n        catch (Exception e)\r\n        {\r\n            //se l'utente non esiste, lancio un'eccezione per comunicarlo al controller grafico\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public UtenteBean recuperoUtente(LoginBean loginBean) {\r\n\r\n\r\n\r\n\r\n        UtenteDAO utenteDao = DAOFactory.getDAOFactory().createUtenteDAO();\r\n        //decidere il metodo di scelta del DAO\r\n        //UtenteDAO utenteDao = new UtenteDAOJSON();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        //vedo se l'utente esiste nel singleton\r\n        Singleton istanza=Singleton.getInstance();\r\n        Login login = new Login(loginBean.getEmail(), loginBean.getPassword());\r\n        //se esiste nel singleton, lo recupero e lo restituisco\r\n        if(istanza.esisteUtenteDaLogin(login)) {\r\n\r\n            Utente utente= istanza.getUtenteDaLogin(new Login(loginBean.getEmail(), loginBean.getPassword()));\r\n            if (utente.getAllenatore()) {\r\n                return new AllenatoreBean(utente.getUsername(), utente.getEmail(), utente.getPassword() , utente.getAllenamenti(), utente.getSquadra());\r\n            }\r\n            else {\r\n                return new GiocatoreBean(utente.getUsername(), utente.getEmail(), utente.getPassword(), utente.getAllenamenti(), utente.getSquadra());\r\n            }\r\n        }\r\n\r\n        else {\r\n            //creazione del modello utente\r\n            System.out.println(\"Recupero l'utente \"+ loginBean.getEmail() +\" con password \"+ loginBean.getPassword() + \"dalla persistenza\");\r\n            Utente utente = utenteDao.recuperaUtenteDaLogin(new Login(loginBean.getEmail(), loginBean.getPassword()));\r\n\r\n            //creazione del bean utente in funzioni che sia un allenatore o un giocatore\r\n            if (utente.getAllenatore()) {\r\n\r\n                Utente allenatore = new Allenatore(utente.getUsername(), utente.getEmail(), utente.getPassword() , utente.getAllenamenti(), utente.getSquadra());\r\n                istanza.aggiungiUtente(allenatore);\r\n\r\n                //restituzione del bean dell'allenatore creato\r\n                return new AllenatoreBean(utente.getUsername(), utente.getEmail(), utente.getPassword() , utente.getAllenamenti(), utente.getSquadra());\r\n            }\r\n\r\n            else {\r\n\r\n                Utente giocatore = new Giocatore(utente.getUsername(), utente.getEmail(), utente.getPassword() , utente.getAllenamenti(), utente.getSquadra());\r\n                istanza.aggiungiUtente(giocatore);\r\n\r\n                //restituzione del bean del giocatore creato\r\n                return new GiocatoreBean(utente.getUsername(), utente.getEmail(), utente.getPassword(), utente.getAllenamenti(), utente.getSquadra());\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllerApplicativo/LoginControllerApplicativo.java b/src/main/java/controllerApplicativo/LoginControllerApplicativo.java
--- a/src/main/java/controllerApplicativo/LoginControllerApplicativo.java	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/java/controllerApplicativo/LoginControllerApplicativo.java	(date 1736158681378)
@@ -50,17 +50,7 @@
 
     public UtenteBean recuperoUtente(LoginBean loginBean) {
 
-
-
-
         UtenteDAO utenteDao = DAOFactory.getDAOFactory().createUtenteDAO();
-        //decidere il metodo di scelta del DAO
-        //UtenteDAO utenteDao = new UtenteDAOJSON();
-
-
-
-
-
 
 
         //vedo se l'utente esiste nel singleton
@@ -69,7 +59,11 @@
         //se esiste nel singleton, lo recupero e lo restituisco
         if(istanza.esisteUtenteDaLogin(login)) {
 
+            //inizializzo il modello all'interno del sistema per l'utilizzo
             Utente utente= istanza.getUtenteDaLogin(new Login(loginBean.getEmail(), loginBean.getPassword()));
+
+            //salvo all'interno del singleton l'utente con utenteCorrente
+            istanza.setUtenteCorrente(utente);
             if (utente.getAllenatore()) {
                 return new AllenatoreBean(utente.getUsername(), utente.getEmail(), utente.getPassword() , utente.getAllenamenti(), utente.getSquadra());
             }
@@ -81,23 +75,25 @@
         else {
             //creazione del modello utente
             System.out.println("Recupero l'utente "+ loginBean.getEmail() +" con password "+ loginBean.getPassword() + "dalla persistenza");
+
+            //creo una nuova istanza di utente che contiene l'utente che fa uso del sistema
             Utente utente = utenteDao.recuperaUtenteDaLogin(new Login(loginBean.getEmail(), loginBean.getPassword()));
 
+            //salvo all'interno del singleton l'utente come utenteCorrente
+            istanza.setUtenteCorrente(utente);
+
+            //salvo l'utente all'interno del singleton nella lista di utenti che hanno fatto uso del sistema
+            istanza.aggiungiUtente(utente);
+
             //creazione del bean utente in funzioni che sia un allenatore o un giocatore
             if (utente.getAllenatore()) {
 
-                Utente allenatore = new Allenatore(utente.getUsername(), utente.getEmail(), utente.getPassword() , utente.getAllenamenti(), utente.getSquadra());
-                istanza.aggiungiUtente(allenatore);
-
                 //restituzione del bean dell'allenatore creato
                 return new AllenatoreBean(utente.getUsername(), utente.getEmail(), utente.getPassword() , utente.getAllenamenti(), utente.getSquadra());
             }
 
             else {
 
-                Utente giocatore = new Giocatore(utente.getUsername(), utente.getEmail(), utente.getPassword() , utente.getAllenamenti(), utente.getSquadra());
-                istanza.aggiungiUtente(giocatore);
-
                 //restituzione del bean del giocatore creato
                 return new GiocatoreBean(utente.getUsername(), utente.getEmail(), utente.getPassword(), utente.getAllenamenti(), utente.getSquadra());
             }
Index: src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplivativo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplivativo.java b/src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplicativo.java
rename from src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplivativo.java
rename to src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplicativo.java
--- a/src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplivativo.java	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplicativo.java	(date 1736163401018)
@@ -1,34 +1,31 @@
 package controllerApplicativo;
 
-import engineering.bean.UtenteBean;
+
 import engineering.dao.AllenamentoDAO;
-import engineering.dao.AllenamentoDAOJSON;
-import engineering.dao.AllenamentoDAOMySQL;
 import engineering.pattern.Singleton;
+import engineering.pattern.abstract_factory.DAOFactory;
 import modelli.Allenamento;
 import engineering.bean.AllenamentoBean;
 import modelli.Utente;
 
-public class CreazioneAllenamentoControllerApplivativo {
+public class CreazioneAllenamentoControllerApplicativo {
 
-    public void creaAllenamento(AllenamentoBean allenamentoBean, UtenteBean utenteBean) {
+    public void creaAllenamento(AllenamentoBean allenamentoBean) {
 
         try {
-            Singleton instance = Singleton.getInstance();
-            Utente utente=instance.getUtenteDaEmail(utenteBean.getEmail());
+            Singleton istanza = Singleton.getInstance();
 
+            //ottengo dal singleton l'utente corrente
+            Utente utente= istanza.getUtenteCorrente();
+
+            //creo il modello allenamento che verrÃ  inserito nel database
             Allenamento allenamento=new Allenamento(allenamentoBean.getData(), allenamentoBean.getDurata(), allenamentoBean.getDescrizione());
 
-
-
-
-            //AllenamentoDAO allenamentoDAO = new AllenamentoDAOJSON();
-            AllenamentoDAO allenamentoDAO = new AllenamentoDAOMySQL();
+            //aggiungo l'allenamento all'utente
+            utente.getAllenamenti().add(allenamento);
 
-
-
-
-
+            //creo il dao per salvare l'allenamento nella persistenza
+            AllenamentoDAO allenamentoDAO = DAOFactory.getDAOFactory().createAllenamentoDAO();
 
             //assegniamo l'allenamento all'allenatore che lo ha creato
             allenamentoDAO.inserisciAllenamentoAdUtente(allenamento, utente);
Index: src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllerApplicativo;\r\n\r\nimport engineering.bean.UtenteBean;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport viste.first.HomepageAllenatoreGrafico;\r\n\r\npublic class HomepageAllenatoreControllerApplicativo\r\n{\r\n\r\n    public HomepageAllenatoreControllerApplicativo() {\r\n    }\r\n\r\n    public void CreaSquadra(UtenteBean utenteBean) throws EccezioneGenerica{\r\n        System.out.println(\"Inizializzazione della Creazione della Squadra\");\r\n\r\n        //implemento i controlli sull'allenatore che richiedere la creazione della Squadra\r\n        if (utenteBean.getSquadra()!=null) {\r\n            System.out.println(\"L'allenatore ha giÃ  una squadra\");\r\n            throw new EccezioneGenerica(\"L'allenatore ha giÃ  una squadra\");\r\n\r\n        } else {\r\n            System.out.println(\"L'allenatore non ha una squadra e procedo alla creazione della squadra\");\r\n\r\n            //compio il cambio della scena\r\n            //Nota che il cambio scena deve avvenire qui. Nel codice temporaneo do la responsabilitÃ  al controller grafico\r\n            HomepageAllenatoreGrafico homepageAllenatoreGrafico = new HomepageAllenatoreGrafico();\r\n\r\n            System.out.println(\"Cambio scena alla creazione della squadra\");\r\n\r\n            homepageAllenatoreGrafico.CodiceTemporaneoPerCambioScena();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java b/src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java
--- a/src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java	(date 1736166169044)
@@ -2,19 +2,24 @@
 
 import engineering.bean.UtenteBean;
 import engineering.eccezioni.EccezioneGenerica;
+import engineering.pattern.Singleton;
+import modelli.Utente;
 import viste.first.HomepageAllenatoreGrafico;
 
+import java.util.Objects;
+
 public class HomepageAllenatoreControllerApplicativo
 {
 
     public HomepageAllenatoreControllerApplicativo() {
     }
 
-    public void CreaSquadra(UtenteBean utenteBean) throws EccezioneGenerica{
-        System.out.println("Inizializzazione della Creazione della Squadra");
+    public void CreaSquadra() throws EccezioneGenerica{
+        Singleton istanza= Singleton.getInstance();
+        Utente utente= istanza.getUtenteCorrente();
 
         //implemento i controlli sull'allenatore che richiedere la creazione della Squadra
-        if (utenteBean.getSquadra()!=null) {
+        if (!utente.getSquadra().getNome().isEmpty()) {
             System.out.println("L'allenatore ha giÃ  una squadra");
             throw new EccezioneGenerica("L'allenatore ha giÃ  una squadra");
 
@@ -22,12 +27,14 @@
             System.out.println("L'allenatore non ha una squadra e procedo alla creazione della squadra");
 
             //compio il cambio della scena
+            /*
             //Nota che il cambio scena deve avvenire qui. Nel codice temporaneo do la responsabilitÃ  al controller grafico
             HomepageAllenatoreGrafico homepageAllenatoreGrafico = new HomepageAllenatoreGrafico();
 
             System.out.println("Cambio scena alla creazione della squadra");
 
             homepageAllenatoreGrafico.CodiceTemporaneoPerCambioScena();
+             */
         }
     }
 }
Index: src/main/resources/viste/homepageAllenatore.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n\r\n<AnchorPane prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/23\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"viste.first.HomepageAllenatoreGrafico\">\r\n   <children>\r\n      <Button fx:id=\"creaSquadra\" layoutX=\"244.0\" layoutY=\"50.0\" mnemonicParsing=\"false\" onAction=\"#CreaSquadra\" text=\"creazione squadra\" />\r\n      <Button fx:id=\"creaAllenamento\" layoutX=\"233.0\" layoutY=\"156.0\" mnemonicParsing=\"false\" onAction=\"#CreaAllenamento\" text=\"creazione allenamento\" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/viste/homepageAllenatore.fxml b/src/main/resources/viste/homepageAllenatore.fxml
--- a/src/main/resources/viste/homepageAllenatore.fxml	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/resources/viste/homepageAllenatore.fxml	(date 1736158890661)
@@ -1,11 +1,13 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
 <?import javafx.scene.control.Button?>
+<?import javafx.scene.control.Label?>
 <?import javafx.scene.layout.AnchorPane?>
 
 <AnchorPane prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/23" xmlns:fx="http://javafx.com/fxml/1" fx:controller="viste.first.HomepageAllenatoreGrafico">
    <children>
       <Button fx:id="creaSquadra" layoutX="244.0" layoutY="50.0" mnemonicParsing="false" onAction="#CreaSquadra" text="creazione squadra" />
       <Button fx:id="creaAllenamento" layoutX="233.0" layoutY="156.0" mnemonicParsing="false" onAction="#CreaAllenamento" text="creazione allenamento" />
+      <Label fx:id="mostraErrori" layoutX="286.0" layoutY="246.0" textFill="RED" />
    </children>
 </AnchorPane>
Index: src/main/java/viste/first/HomepageAllenatoreGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package viste.first;\r\n\r\nimport engineering.bean.AllenatoreBean;\r\nimport engineering.bean.UtenteBean;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.stage.Stage;\r\nimport viste.first.utils.CambioScena;\r\n\r\nimport static viste.first.utils.FxmlFileName.PAGINA_CREAZIONE_ALLENAMENTO;\r\nimport static viste.first.utils.FxmlFileName.PAGINA_CREAZIONE_SQUADRA;\r\n\r\npublic class HomepageAllenatoreGrafico {\r\n\r\n\r\n    public void initialize() {\r\n        System.out.println(\"Inizializzazione Temporanea della Pagina Principale\");\r\n    }\r\n\r\n    @FXML\r\n    private Button creaSquadra;\r\n\r\n    @FXML\r\n    private Button creaAllenamento;\r\n\r\n    @FXML\r\n    protected void CreaAllenamento(ActionEvent event) {\r\n\r\n        System.out.println(\"Creazione Allenamento\");\r\n\r\n        //cambio scena alla pagina di creazione dell'allenamento\r\n        try {\r\n            Stage stage = (Stage) creaAllenamento.getScene().getWindow();\r\n            CambioScena cambioScena = new CambioScena();\r\n            cambioScena.cambioScena(stage, PAGINA_CREAZIONE_ALLENAMENTO);\r\n\r\n        } catch (EccezioneGenerica EccezioneGenerica) {\r\n            System.out.println(EccezioneGenerica.getMessage());\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    protected void CreaSquadra(ActionEvent event) {\r\n\r\n        System.out.println(\"Creazione Squadra\");\r\n\r\n        //cambio scena alla prima vista dove compiamo la creazione della squadra\r\n\r\n        //passo al controller applicativo il bean dell'utente che sta richiedendo la creazione della squadra codÃ¬ che possa fare il cambio scena\r\n\r\n        /*commento il codice possibilmente corretto per usare qualcosa di temporaneo\r\n        HomepageAllenatoreControllerApplicativo paginaPrincipaleControllerApplicativo = new HomepageAllenatoreControllerApplicativo();\r\n        paginaPrincipaleControllerApplicativo.CreaSquadra(utenteBean);\r\n         */\r\n\r\n        try {\r\n            Stage stage = (Stage) creaSquadra.getScene().getWindow();\r\n            CambioScena cambioScena = new CambioScena();\r\n            cambioScena.cambioScena(stage, PAGINA_CREAZIONE_SQUADRA);\r\n\r\n        } catch (EccezioneGenerica EccezioneGenerica) {\r\n            System.out.println(EccezioneGenerica.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public void CodiceTemporaneoPerCambioScena() {\r\n        try {\r\n            Stage stage = (Stage) creaSquadra.getScene().getWindow();\r\n            CambioScena cambioScena = new CambioScena();\r\n            cambioScena.cambioScena(stage, PAGINA_CREAZIONE_SQUADRA);\r\n\r\n        } catch (EccezioneGenerica EccezioneGenerica) {\r\n            System.out.println(EccezioneGenerica.getMessage());\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/viste/first/HomepageAllenatoreGrafico.java b/src/main/java/viste/first/HomepageAllenatoreGrafico.java
--- a/src/main/java/viste/first/HomepageAllenatoreGrafico.java	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/java/viste/first/HomepageAllenatoreGrafico.java	(date 1736166168970)
@@ -1,11 +1,13 @@
 package viste.first;
 
+import controllerApplicativo.HomepageAllenatoreControllerApplicativo;
 import engineering.bean.AllenatoreBean;
 import engineering.bean.UtenteBean;
 import engineering.eccezioni.EccezioneGenerica;
 import javafx.event.ActionEvent;
 import javafx.fxml.FXML;
 import javafx.scene.control.Button;
+import javafx.scene.control.Label;
 import javafx.stage.Stage;
 import viste.first.utils.CambioScena;
 
@@ -19,6 +21,9 @@
         System.out.println("Inizializzazione Temporanea della Pagina Principale");
     }
 
+    @FXML
+    private Label mostraErrori;
+
     @FXML
     private Button creaSquadra;
 
@@ -44,38 +49,28 @@
     @FXML
     protected void CreaSquadra(ActionEvent event) {
 
-        System.out.println("Creazione Squadra");
+        try {
+            System.out.println("Creazione Squadra");
 
-        //cambio scena alla prima vista dove compiamo la creazione della squadra
+            //cambio scena alla prima vista dove compiamo la creazione della squadra
 
-        //passo al controller applicativo il bean dell'utente che sta richiedendo la creazione della squadra codÃ¬ che possa fare il cambio scena
-
-        /*commento il codice possibilmente corretto per usare qualcosa di temporaneo
-        HomepageAllenatoreControllerApplicativo paginaPrincipaleControllerApplicativo = new HomepageAllenatoreControllerApplicativo();
-        paginaPrincipaleControllerApplicativo.CreaSquadra(utenteBean);
-         */
+            //passo al controller applicativo il bean dell'utente che sta richiedendo la creazione della squadra codÃ¬ che possa fare il cambio scena
+            HomepageAllenatoreControllerApplicativo paginaPrincipaleControllerApplicativo = new HomepageAllenatoreControllerApplicativo();
+            paginaPrincipaleControllerApplicativo.CreaSquadra();
+
 
-        try {
-            Stage stage = (Stage) creaSquadra.getScene().getWindow();
-            CambioScena cambioScena = new CambioScena();
-            cambioScena.cambioScena(stage, PAGINA_CREAZIONE_SQUADRA);
+            try {
+                Stage stage = (Stage) creaSquadra.getScene().getWindow();
+                CambioScena cambioScena = new CambioScena();
+                cambioScena.cambioScena(stage, PAGINA_CREAZIONE_SQUADRA);
 
-        } catch (EccezioneGenerica EccezioneGenerica) {
-            System.out.println(EccezioneGenerica.getMessage());
-        }
-
-    }
-
-
-    public void CodiceTemporaneoPerCambioScena() {
-        try {
-            Stage stage = (Stage) creaSquadra.getScene().getWindow();
-            CambioScena cambioScena = new CambioScena();
-            cambioScena.cambioScena(stage, PAGINA_CREAZIONE_SQUADRA);
-
-        } catch (EccezioneGenerica EccezioneGenerica) {
-            System.out.println(EccezioneGenerica.getMessage());
+            } catch (EccezioneGenerica EccezioneGenerica) {
+                mostraErrori.setText(EccezioneGenerica.getMessage());
+            }
+        }
+        catch (EccezioneGenerica e) {
+            mostraErrori.setText(e.getMessage());
         }
-    }
 
+    }
 }
Index: src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package viste.first;\r\n\r\nimport controllerApplicativo.CreazioneAllenamentoControllerApplivativo;\r\nimport engineering.bean.AllenatoreBean;\r\nimport engineering.bean.UtenteBean;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TextField;\r\nimport engineering.bean.AllenamentoBean;\r\nimport javafx.stage.Stage;\r\nimport viste.first.utils.CambioScena;\r\n\r\nimport static viste.first.utils.FxmlFileName.PAGINA_HOME;\r\n\r\npublic class CreazioneAllenamentoControllerGrafico{\r\n\r\n    @FXML\r\n    private Label labelErrori;\r\n\r\n    @FXML\r\n    private TextField giornoAllenamento;\r\n\r\n    @FXML\r\n    private TextField meseAllenamento;\r\n\r\n    @FXML\r\n    private TextField annoAllenamento;\r\n\r\n    @FXML\r\n    private TextField durataAllenamento;\r\n\r\n    @FXML\r\n    private TextField descrizioneAllenamento;\r\n\r\n    @FXML\r\n    private Button creaAllenamento;\r\n\r\n    public void initialize() {\r\n        System.out.println(\"Inizializzazione Temporanea della Pagina di Creazione Allenamento\");\r\n        // Populate the ChoiceBox with items\r\n        }\r\n\r\n    @FXML\r\n    public void CreaAllenamento() {\r\n        try {\r\n            System.out.println(\"Creazione Allenamento\");\r\n            int giorno = Integer.parseInt(giornoAllenamento.getText());\r\n            int mese = Integer.parseInt(meseAllenamento.getText());\r\n            int anno = Integer.parseInt(annoAllenamento.getText());\r\n            int durata = Integer.parseInt(durataAllenamento.getText());\r\n            String descrizione = descrizioneAllenamento.getText();\r\n\r\n            if(giorno < 1 || giorno > 31) {\r\n                throw new EccezioneGenerica(\"Giorno non valido\");\r\n            }\r\n            if (mese < 1 || mese > 12) {\r\n                throw new EccezioneGenerica(\"Mese non valido\");\r\n            }\r\n            if (anno < 2021 ) {\r\n                throw new EccezioneGenerica(\"Anno non valido\");\r\n            }\r\n            if (durata < 1) {\r\n                throw new EccezioneGenerica(\"Durata non valida\");\r\n            }\r\n            String data = giorno + \"-\" + mese + \"-\" + anno;\r\n            AllenamentoBean allenamentoBean = new AllenamentoBean(data, durata, descrizione);\r\n\r\n            UtenteBean utenteBean = new AllenatoreBean(\"prova\", \"a\", \"1\");\r\n\r\n            CreazioneAllenamentoControllerApplivativo creazioneAllenamentoControllerApplivativo = new CreazioneAllenamentoControllerApplivativo();\r\n            creazioneAllenamentoControllerApplivativo.creaAllenamento(allenamentoBean, utenteBean);\r\n            System.out.println(\"giorno: \" + giorno + \" mese: \" + mese + \" anno: \" + anno + \" durata: \" + durata + \" descrizione: \" + descrizione);\r\n\r\n            try {\r\n                Stage stage = (Stage) labelErrori.getScene().getWindow();\r\n                CambioScena cambioScena = new CambioScena();\r\n                cambioScena.cambioScena(stage, PAGINA_HOME);\r\n\r\n            } catch (EccezioneGenerica EccezioneGenerica) {\r\n                System.out.println(EccezioneGenerica.getMessage());\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            labelErrori.setText(e.getMessage());\r\n            labelErrori.setVisible(true);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java b/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java
--- a/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java	(date 1736163400962)
@@ -1,8 +1,6 @@
 package viste.first;
 
-import controllerApplicativo.CreazioneAllenamentoControllerApplivativo;
-import engineering.bean.AllenatoreBean;
-import engineering.bean.UtenteBean;
+import controllerApplicativo.CreazioneAllenamentoControllerApplicativo;
 import engineering.eccezioni.EccezioneGenerica;
 import javafx.fxml.FXML;
 import javafx.scene.control.Button;
@@ -39,7 +37,6 @@
 
     public void initialize() {
         System.out.println("Inizializzazione Temporanea della Pagina di Creazione Allenamento");
-        // Populate the ChoiceBox with items
         }
 
     @FXML
@@ -67,10 +64,8 @@
             String data = giorno + "-" + mese + "-" + anno;
             AllenamentoBean allenamentoBean = new AllenamentoBean(data, durata, descrizione);
 
-            UtenteBean utenteBean = new AllenatoreBean("prova", "a", "1");
-
-            CreazioneAllenamentoControllerApplivativo creazioneAllenamentoControllerApplivativo = new CreazioneAllenamentoControllerApplivativo();
-            creazioneAllenamentoControllerApplivativo.creaAllenamento(allenamentoBean, utenteBean);
+            CreazioneAllenamentoControllerApplicativo creazioneAllenamentoControllerApplicativo = new CreazioneAllenamentoControllerApplicativo();
+            creazioneAllenamentoControllerApplicativo.creaAllenamento(allenamentoBean);
             System.out.println("giorno: " + giorno + " mese: " + mese + " anno: " + anno + " durata: " + durata + " descrizione: " + descrizione);
 
             try {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d48fabd9-9d0c-4832-9762-f7ff2f4fd62e\" name=\"Changes\" comment=\"Modificato la rappresentazione di squadra nei file utenti in json e derivanti modifiche nei fai dao\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/dataSources.local.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/dataSources.local.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/controllerApplicativo/LoginControllerApplicativo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/controllerApplicativo/LoginControllerApplicativo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/engineering/dao/AbstractFactory.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/inizio/LoginApplicazione.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/inizio/LoginApplicazione.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/viste/first/HomepageAllenatoreGrafico.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/viste/first/HomepageAllenatoreGrafico.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/persistenza/utenti/a.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/persistenza/utenti/a.json\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;FrancescoMin&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/FrancescoMin/TeamTrainingHub.git&quot;,\r\n    &quot;accountId&quot;: &quot;64b32a3e-6402-44ac-8316-64089203d618&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n    <option name=\"showPreview\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nIPzptCElr3Z2cbKRrMzjtrfIO\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.LoginApplicazione.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/max/Desktop/ISPW/Ispw/Ispw/progettiOthers/Project-master/libs/mysql-connector-j-8.0.31.jar&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.48505747&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"OLDteamtraininghub\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"OLDteamtraininghub\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-fdfe4dae3a2d-intellij.indexing.shared.core-IU-243.22562.218\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-IU-243.22562.218\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d48fabd9-9d0c-4832-9762-f7ff2f4fd62e\" name=\"Changes\" comment=\"\" />\r\n      <created>1728657885128</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1728657885128</updated>\r\n      <workItem from=\"1728657886213\" duration=\"2000\" />\r\n      <workItem from=\"1730031757462\" duration=\"424000\" />\r\n      <workItem from=\"1730055384804\" duration=\"595000\" />\r\n      <workItem from=\"1730114720831\" duration=\"614000\" />\r\n      <workItem from=\"1730297470122\" duration=\"795000\" />\r\n      <workItem from=\"1730367712503\" duration=\"1261000\" />\r\n      <workItem from=\"1730900062191\" duration=\"11000\" />\r\n      <workItem from=\"1730900495932\" duration=\"139000\" />\r\n      <workItem from=\"1730900654982\" duration=\"1874000\" />\r\n      <workItem from=\"1731419658599\" duration=\"1145000\" />\r\n      <workItem from=\"1731510660528\" duration=\"565000\" />\r\n      <workItem from=\"1731513936734\" duration=\"1087000\" />\r\n      <workItem from=\"1732372725814\" duration=\"1497000\" />\r\n      <workItem from=\"1732618556068\" duration=\"9617000\" />\r\n      <workItem from=\"1732719715292\" duration=\"1949000\" />\r\n      <workItem from=\"1732787371589\" duration=\"8556000\" />\r\n      <workItem from=\"1732810871835\" duration=\"127000\" />\r\n      <workItem from=\"1733073299051\" duration=\"853000\" />\r\n      <workItem from=\"1733240050872\" duration=\"2012000\" />\r\n      <workItem from=\"1733675765565\" duration=\"234000\" />\r\n      <workItem from=\"1733845576886\" duration=\"191000\" />\r\n      <workItem from=\"1733997673195\" duration=\"1357000\" />\r\n      <workItem from=\"1734004004118\" duration=\"9782000\" />\r\n      <workItem from=\"1734084904930\" duration=\"4581000\" />\r\n      <workItem from=\"1734364185289\" duration=\"606000\" />\r\n      <workItem from=\"1734386510091\" duration=\"6108000\" />\r\n      <workItem from=\"1734427385697\" duration=\"11873000\" />\r\n      <workItem from=\"1734528607867\" duration=\"6716000\" />\r\n      <workItem from=\"1734601053904\" duration=\"981000\" />\r\n      <workItem from=\"1734685591858\" duration=\"382000\" />\r\n      <workItem from=\"1734686289666\" duration=\"16032000\" />\r\n      <workItem from=\"1734892877229\" duration=\"1451000\" />\r\n      <workItem from=\"1734966919459\" duration=\"8233000\" />\r\n      <workItem from=\"1735032977134\" duration=\"4180000\" />\r\n      <workItem from=\"1735901497067\" duration=\"2500000\" />\r\n      <workItem from=\"1735987121389\" duration=\"619000\" />\r\n      <workItem from=\"1735990839984\" duration=\"3029000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Inizio settaggio database\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730032171397</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730032171397</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"file workspace\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730299192134</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730299192136</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"commit e push di recupero\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730299261335</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730299261335</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"view della registrazione (senza controller)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730901612261</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730901612261</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Modifica di controller applicativo, grafico della registrazione e fxml della registrazione\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732726100799</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732726100800</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Typo nel package, aggiunta string password\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733074263323</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733074263323</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"rimozione stringa password, rimozione &quot;registraUtente&quot; per &quot;inserisciUtente&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733675993534</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733675993534</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"correzione typo &quot;Eccezione&quot;, modifiche RegistrazioneCtrlApplicativo, non vengono salvati i dati di registrazione\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734108476104</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734108476104</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Creazione nuova vista, altri tentativi in RegistrazioneCtrlApplicativo\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734393253773</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734393253773</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"RegistrazioneCtrlApplicativo funzionante\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734428756847</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734428756847</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Fix valori stringhe nei json\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734442708259</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734442708259</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Creazione Singleton, creazione Squadra e Allenamento, modifiche minori su json\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734608604546</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734608604546</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Modificato la rappresentazione di squadra nei file utenti in json e derivanti modifiche nei fai dao\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734989947328</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734989947328</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"14\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Inizio settaggio database\" />\r\n    <MESSAGE value=\"file workspace\" />\r\n    <MESSAGE value=\"commit e push di recupero\" />\r\n    <MESSAGE value=\"view della registrazione (senza controller)\" />\r\n    <MESSAGE value=\"Modifica di controller applicativo, grafico della registrazione e fxml della registrazione\" />\r\n    <MESSAGE value=\"Typo nel package, aggiunta string password\" />\r\n    <MESSAGE value=\"rimozione stringa password, rimozione &quot;registraUtente&quot; per &quot;inserisciUtente&quot;\" />\r\n    <MESSAGE value=\"correzione typo &quot;Eccezione&quot;, modifiche RegistrazioneCtrlApplicativo, non vengono salvati i dati di registrazione\" />\r\n    <MESSAGE value=\"Creazione nuova vista, altri tentativi in RegistrazioneCtrlApplicativo\" />\r\n    <MESSAGE value=\"RegistrazioneCtrlApplicativo funzionante\" />\r\n    <MESSAGE value=\"Fix valori stringhe nei json\" />\r\n    <MESSAGE value=\"Creazione Singleton, creazione Squadra e Allenamento, modifiche minori su json\" />\r\n    <MESSAGE value=\"Modificato la rappresentazione di squadra nei file utenti in json e derivanti modifiche nei fai dao\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Modificato la rappresentazione di squadra nei file utenti in json e derivanti modifiche nei fai dao\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/.idea/workspace.xml	(date 1736183021738)
@@ -4,14 +4,23 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="d48fabd9-9d0c-4832-9762-f7ff2f4fd62e" name="Changes" comment="Modificato la rappresentazione di squadra nei file utenti in json e derivanti modifiche nei fai dao">
-      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
+    <list default="true" id="d48fabd9-9d0c-4832-9762-f7ff2f4fd62e" name="Changes" comment="Creazione Abstract Factory">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_12_2024_12_59_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_12_2024_12_59__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplivativo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplicativo.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllerApplicativo/CreazioneSquadraControllerApplicativo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllerApplicativo/CreazioneSquadraControllerApplicativo.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/controllerApplicativo/LoginControllerApplicativo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllerApplicativo/LoginControllerApplicativo.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/engineering/dao/AbstractFactory.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/inizio/LoginApplicazione.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/inizio/LoginApplicazione.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/engineering/dao/AllenamentoDAOJSON.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/engineering/dao/AllenamentoDAOJSON.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/engineering/dao/SquadraDAOJSON.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/engineering/dao/SquadraDAOJSON.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/engineering/dao/SquadraDAOMySQL.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/engineering/dao/SquadraDAOMySQL.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/engineering/pattern/Singleton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/engineering/pattern/Singleton.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/viste/first/CreazioneSquadraControllerGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/viste/first/CreazioneSquadraControllerGrafico.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/viste/first/HomepageAllenatoreGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/viste/first/HomepageAllenatoreGrafico.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/resources/persistenza/utenti/a.json" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/persistenza/utenti/a.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/viste/homepageAllenatore.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/viste/homepageAllenatore.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -65,7 +74,7 @@
     &quot;git-widget-placeholder&quot;: &quot;master&quot;,
     &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/max/Desktop/ISPW/Ispw/Ispw/progettiOthers/Project-master/libs/mysql-connector-j-8.0.31.jar&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/PC/AppData/Local/SceneBuilder/SceneBuilder.exe&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
@@ -146,6 +155,9 @@
       <workItem from="1735901497067" duration="2500000" />
       <workItem from="1735987121389" duration="619000" />
       <workItem from="1735990839984" duration="3029000" />
+      <workItem from="1736011071702" duration="407000" />
+      <workItem from="1736157443243" duration="7780000" />
+      <workItem from="1736180397139" duration="2427000" />
     </task>
     <task id="LOCAL-00001" summary="Inizio settaggio database">
       <option name="closed" value="true" />
@@ -251,7 +263,15 @@
       <option name="project" value="LOCAL" />
       <updated>1734989947328</updated>
     </task>
-    <option name="localTasksCounter" value="14" />
+    <task id="LOCAL-00014" summary="Creazione Abstract Factory">
+      <option name="closed" value="true" />
+      <created>1736011197198</created>
+      <option name="number" value="00014" />
+      <option name="presentableId" value="LOCAL-00014" />
+      <option name="project" value="LOCAL" />
+      <updated>1736011197198</updated>
+    </task>
+    <option name="localTasksCounter" value="15" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -282,6 +302,7 @@
     <MESSAGE value="Fix valori stringhe nei json" />
     <MESSAGE value="Creazione Singleton, creazione Squadra e Allenamento, modifiche minori su json" />
     <MESSAGE value="Modificato la rappresentazione di squadra nei file utenti in json e derivanti modifiche nei fai dao" />
-    <option name="LAST_COMMIT_MESSAGE" value="Modificato la rappresentazione di squadra nei file utenti in json e derivanti modifiche nei fai dao" />
+    <MESSAGE value="Creazione Abstract Factory" />
+    <option name="LAST_COMMIT_MESSAGE" value="Creazione Abstract Factory" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/engineering/dao/AllenamentoDAOJSON.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package engineering.dao;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\nimport com.google.gson.JsonObject;\r\nimport com.google.gson.JsonParser;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport modelli.Allenamento;\r\nimport modelli.Utente;\r\n\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\n\r\npublic class AllenamentoDAOJSON implements AllenamentoDAO {\r\n\r\n    public void creaAllenamento(Allenamento allenamento){\r\n        System.out.println(\"Creazione Allenamento JSON\");\r\n        //aggiunta dell'utente alla lista degli utenti\r\n        try {\r\n            //Creazione del path\r\n            String filePath = \"src/main/resources/persistenza/allenamenti/\" + allenamento.getData() + \".json\";\r\n\r\n            try {\r\n                //controllo che il file sia giÃ  esistente\r\n                Files.readAllBytes(Paths.get(filePath));\r\n\r\n                //se il file esiste, un allenamento con la stessa data esiste giÃ  e lancio un'eccezione\r\n                throw new EccezioneGenerica(\"allenamento esistente\");\r\n\r\n            } catch (IOException e) {\r\n                //creazione del file con nome username dell'utente in formato json\r\n\r\n                // Create a Gson object\r\n                Gson gson = new GsonBuilder().setPrettyPrinting().create();\r\n                FileWriter writer = new FileWriter(filePath);\r\n\r\n                String jsonString = gson.toJson(allenamento);\r\n\r\n                // Step 2: Convert the JSON string to a JsonObject\r\n                JsonObject jsonObject = JsonParser.parseString(jsonString).getAsJsonObject();\r\n\r\n                //salvataggio dell'oggetto serializzato utente nel file json\r\n                writer.write(gson.toJson(jsonObject));\r\n                writer.close();\r\n            }\r\n        } catch (Exception e) {\r\n            throw new EccezioneGenerica(e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void inserisciAllenamentoAdUtente(Allenamento allenamento, Utente utente) {\r\n\r\n        creaAllenamento(allenamento);\r\n\r\n        utente.getAllenamenti().add(allenamento);\r\n\r\n        UtenteDAOJSON utenteDAOJSON = new UtenteDAOJSON();\r\n        utenteDAOJSON.aggiornaUtente(utente);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/engineering/dao/AllenamentoDAOJSON.java b/src/main/java/engineering/dao/AllenamentoDAOJSON.java
--- a/src/main/java/engineering/dao/AllenamentoDAOJSON.java	(revision 8f31ad412c72efd3ea9bd6d5bdf47f72a9b6aa11)
+++ b/src/main/java/engineering/dao/AllenamentoDAOJSON.java	(date 1736161559637)
@@ -55,8 +55,6 @@
 
         creaAllenamento(allenamento);
 
-        utente.getAllenamenti().add(allenamento);
-
         UtenteDAOJSON utenteDAOJSON = new UtenteDAOJSON();
         utenteDAOJSON.aggiornaUtente(utente);
     }
