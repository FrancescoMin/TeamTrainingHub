Index: src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplicativo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllerApplicativo;\r\n\r\n\r\nimport engineering.dao.AllenamentoDAO;\r\nimport engineering.pattern.Singleton;\r\nimport engineering.pattern.abstract_factory.DAOFactory;\r\nimport modelli.Allenamento;\r\nimport engineering.bean.AllenamentoBean;\r\nimport modelli.Utente;\r\n\r\npublic class CreazioneAllenamentoControllerApplicativo {\r\n\r\n    public void creaAllenamento(AllenamentoBean allenamentoBean) {\r\n\r\n        try {\r\n            Singleton istanza = Singleton.getInstance();\r\n\r\n            //ottengo dal singleton l'utente corrente\r\n            Utente utente= istanza.getUtenteCorrente();\r\n\r\n            //creo il modello allenamento che verrà inserito nel database\r\n            Allenamento allenamento=new Allenamento(allenamentoBean.getData(), allenamentoBean.getDurata(), allenamentoBean.getDescrizione());\r\n\r\n            //aggiungo l'allenamento all'utente\r\n            utente.getAllenamenti().add(allenamento);\r\n\r\n            //creo il dao per salvare l'allenamento nella persistenza\r\n            AllenamentoDAO allenamentoDAO = DAOFactory.getDAOFactory().createAllenamentoDAO();\r\n\r\n            //assegniamo l'allenamento all'allenatore che lo ha creato\r\n            allenamentoDAO.inserisciAllenamentoAdUtente(allenamento, utente);\r\n\r\n            System.out.println(\"Creazione ed inserimento dell'allenamento avvenuto con successo\");\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplicativo.java b/src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplicativo.java
--- a/src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplicativo.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplicativo.java	(date 1736252407495)
@@ -1,7 +1,7 @@
 package controllerApplicativo;
 
-
 import engineering.dao.AllenamentoDAO;
+import engineering.eccezioni.EccezioneGenerica;
 import engineering.pattern.Singleton;
 import engineering.pattern.abstract_factory.DAOFactory;
 import modelli.Allenamento;
@@ -24,17 +24,19 @@
             //aggiungo l'allenamento all'utente
             utente.getAllenamenti().add(allenamento);
 
-            //creo il dao per salvare l'allenamento nella persistenza
-            AllenamentoDAO allenamentoDAO = DAOFactory.getDAOFactory().createAllenamentoDAO();
+            if (!istanza.getDemo()) {
+                //creo il dao per salvare l'allenamento nella persistenza
+                AllenamentoDAO allenamentoDAO = DAOFactory.getDAOFactory().createAllenamentoDAO();
 
-            //assegniamo l'allenamento all'allenatore che lo ha creato
-            allenamentoDAO.inserisciAllenamentoAdUtente(allenamento, utente);
+                //assegniamo l'allenamento all'allenatore che lo ha creato
+                allenamentoDAO.inserisciAllenamentoAdUtente(allenamento, utente);
+            }
 
             System.out.println("Creazione ed inserimento dell'allenamento avvenuto con successo");
 
         } catch (Exception e) {
-            e.printStackTrace();
-
+            System.out.println(e.getMessage());
+            throw new EccezioneGenerica("Errore durante la creazione dell'allenamento");
         }
     }
 }
Index: src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package viste.first;\r\n\r\nimport controllerApplicativo.CreazioneAllenamentoControllerApplicativo;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TextField;\r\nimport engineering.bean.AllenamentoBean;\r\nimport javafx.stage.Stage;\r\nimport viste.first.utils.CambioScena;\r\n\r\nimport static viste.first.utils.FxmlFileName.PAGINA_HOME_ALLENATORE;\r\n\r\npublic class CreazioneAllenamentoControllerGrafico{\r\n\r\n    @FXML\r\n    private Label labelErrori;\r\n\r\n    @FXML\r\n    private TextField giornoAllenamento;\r\n\r\n    @FXML\r\n    private TextField meseAllenamento;\r\n\r\n    @FXML\r\n    private TextField annoAllenamento;\r\n\r\n    @FXML\r\n    private TextField durataAllenamento;\r\n\r\n    @FXML\r\n    private TextField descrizioneAllenamento;\r\n\r\n    @FXML\r\n    private Button creaAllenamento;\r\n\r\n    public void initialize() {\r\n        System.out.println(\"Inizializzazione Temporanea della Pagina di Creazione Allenamento\");\r\n        }\r\n\r\n    @FXML\r\n    public void CreaAllenamento() {\r\n        try {\r\n            System.out.println(\"Creazione Allenamento\");\r\n            int giorno = Integer.parseInt(giornoAllenamento.getText());\r\n            int mese = Integer.parseInt(meseAllenamento.getText());\r\n            int anno = Integer.parseInt(annoAllenamento.getText());\r\n            int durata = Integer.parseInt(durataAllenamento.getText());\r\n            String descrizione = descrizioneAllenamento.getText();\r\n\r\n            if(giorno < 1 || giorno > 31) {\r\n                throw new EccezioneGenerica(\"Giorno non valido\");\r\n            }\r\n            if (mese < 1 || mese > 12) {\r\n                throw new EccezioneGenerica(\"Mese non valido\");\r\n            }\r\n            if (anno < 2021 ) {\r\n                throw new EccezioneGenerica(\"Anno non valido\");\r\n            }\r\n            if (durata < 1) {\r\n                throw new EccezioneGenerica(\"Durata non valida\");\r\n            }\r\n            String data = giorno + \"-\" + mese + \"-\" + anno;\r\n            AllenamentoBean allenamentoBean = new AllenamentoBean(data, durata, descrizione);\r\n\r\n            CreazioneAllenamentoControllerApplicativo creazioneAllenamentoControllerApplicativo = new CreazioneAllenamentoControllerApplicativo();\r\n            creazioneAllenamentoControllerApplicativo.creaAllenamento(allenamentoBean);\r\n            System.out.println(\"giorno: \" + giorno + \" mese: \" + mese + \" anno: \" + anno + \" durata: \" + durata + \" descrizione: \" + descrizione);\r\n\r\n            try {\r\n                Stage stage = (Stage) labelErrori.getScene().getWindow();\r\n                CambioScena cambioScena = new CambioScena();\r\n                cambioScena.cambioScena(stage, PAGINA_HOME_ALLENATORE);\r\n\r\n            } catch (EccezioneGenerica EccezioneGenerica) {\r\n                System.out.println(EccezioneGenerica.getMessage());\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            labelErrori.setText(e.getMessage());\r\n            labelErrori.setVisible(true);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java b/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java
--- a/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java	(date 1736251627355)
@@ -55,19 +55,26 @@
             if (mese < 1 || mese > 12) {
                 throw new EccezioneGenerica("Mese non valido");
             }
-            if (anno < 2021 ) {
+            if (anno < 2025 ) {
                 throw new EccezioneGenerica("Anno non valido");
             }
             if (durata < 1) {
                 throw new EccezioneGenerica("Durata non valida");
             }
+            //creazione della data con cui verrà salvato l'allenamento
             String data = giorno + "-" + mese + "-" + anno;
+
+            //creazione del ben dell'allenamento da far salvare al sistema
             AllenamentoBean allenamentoBean = new AllenamentoBean(data, durata, descrizione);
 
+            //richiediamo al sistema di salvare il bean dell'allenamento
             CreazioneAllenamentoControllerApplicativo creazioneAllenamentoControllerApplicativo = new CreazioneAllenamentoControllerApplicativo();
             creazioneAllenamentoControllerApplicativo.creaAllenamento(allenamentoBean);
+
+            //abbiamo completato il salvataggio e lo facciamo vedere con una stampa a schermo
             System.out.println("giorno: " + giorno + " mese: " + mese + " anno: " + anno + " durata: " + durata + " descrizione: " + descrizione);
 
+            //facciamo il cambio scena per tornare alla home dell'allenatore
             try {
                 Stage stage = (Stage) labelErrori.getScene().getWindow();
                 CambioScena cambioScena = new CambioScena();
@@ -78,7 +85,6 @@
             }
 
         } catch (Exception e) {
-            e.printStackTrace();
             labelErrori.setText(e.getMessage());
             labelErrori.setVisible(true);
         }
Index: src/main/java/inizio/LoginApplicazione.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package inizio;\r\n\r\nimport static viste.first.utils.FxmlFileName.*;\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.Properties;\r\n\r\npublic class\r\nLoginApplicazione extends Application {\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n\r\n\r\n\r\n        FXMLLoader fxmlLoader = new FXMLLoader(LoginApplicazione.class.getResource(PAGINA_PRINCIPALE));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        stage.setTitle(\"Pagine Principale\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n\r\n    }\r\n\r\n    /** Lettura dal file di configurazione per la scelta dell'interfaccia */\r\n    private Properties loadConfigurationProperties() {\r\n        Properties properties = new Properties();\r\n        try (InputStream input = getClass().getClassLoader().getResourceAsStream(\"config.properties\")) {\r\n            if (input != null) {\r\n                properties.load(input);\r\n            } else {\r\n                System.out.println(\"MainApplication: Impossibile trovare il file di configurazione.\");\r\n\r\n            }\r\n        } catch (IOException e) {\r\n            System.out.println(\"MainApplication: Errore durante la lettura del file di configurazione %s\" + e.getMessage());\r\n        }\r\n        return properties;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n\r\n        launch();\r\n    }\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/inizio/LoginApplicazione.java b/src/main/java/inizio/LoginApplicazione.java
--- a/src/main/java/inizio/LoginApplicazione.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/inizio/LoginApplicazione.java	(date 1736246944859)
@@ -21,7 +21,6 @@
         stage.setTitle("Pagine Principale");
         stage.setScene(scene);
         stage.show();
-
     }
 
     /** Lettura dal file di configurazione per la scelta dell'interfaccia */
Index: src/main/java/modelli/Allenamento.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package modelli;\r\n\r\npublic class Allenamento{\r\n    private String data;\r\n    private int durata;\r\n    private String descrizione;\r\n\r\n\r\n    public Allenamento() {}\r\n\r\n\r\n    public Allenamento(String data, int durata) {\r\n        setData(data);\r\n        setDurata(durata);\r\n        setDescrizione(\"\");\r\n    }\r\n\r\n\r\n    public Allenamento(String data, int durata, String descrizione) {\r\n        setData(data);\r\n        setDurata(durata);\r\n        setDescrizione(descrizione);\r\n    }\r\n\r\n    public void setData(String data) {\r\n        this.data = data;\r\n    }\r\n    public String getData() {\r\n        return data;\r\n    }\r\n\r\n\r\n    public void setDurata(int durata) {\r\n        this.durata = durata;\r\n    }\r\n    public int getDurata() {\r\n        return durata;\r\n    }\r\n\r\n\r\n    public void setDescrizione(String descrizione) {\r\n        this.descrizione = descrizione;\r\n    }\r\n    public String getDescrizione() {\r\n        return descrizione;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/modelli/Allenamento.java b/src/main/java/modelli/Allenamento.java
--- a/src/main/java/modelli/Allenamento.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/modelli/Allenamento.java	(date 1736257182704)
@@ -25,16 +25,14 @@
     public void setData(String data) {
         this.data = data;
     }
-    public String getData() {
-        return data;
-    }
+    public String getData() {return data;}
 
 
     public void setDurata(int durata) {
         this.durata = durata;
     }
     public int getDurata() {
-        return durata;
+        return this.durata;
     }
 
 
@@ -42,6 +40,6 @@
         this.descrizione = descrizione;
     }
     public String getDescrizione() {
-        return descrizione;
+        return this.descrizione;
     }
 }
\ No newline at end of file
Index: src/main/java/engineering/dao/AllenamentoDAOJSON.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package engineering.dao;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\nimport com.google.gson.JsonObject;\r\nimport com.google.gson.JsonParser;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport modelli.Allenamento;\r\nimport modelli.Utente;\r\n\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\n\r\npublic class AllenamentoDAOJSON implements AllenamentoDAO {\r\n\r\n    public void creaAllenamento(Allenamento allenamento){\r\n        System.out.println(\"Creazione Allenamento JSON\");\r\n        //aggiunta dell'utente alla lista degli utenti\r\n        try {\r\n            //Creazione del path\r\n            String filePath = \"src/main/resources/persistenza/allenamenti/\" + allenamento.getData() + \".json\";\r\n\r\n            try {\r\n                //controllo che il file sia già esistente\r\n                Files.readAllBytes(Paths.get(filePath));\r\n\r\n                //se il file esiste, un allenamento con la stessa data esiste già e lancio un'eccezione\r\n                throw new EccezioneGenerica(\"allenamento esistente\");\r\n\r\n            } catch (IOException e) {\r\n                //creazione del file con nome username dell'utente in formato json\r\n\r\n                // Create a Gson object\r\n                Gson gson = new GsonBuilder().setPrettyPrinting().create();\r\n                FileWriter writer = new FileWriter(filePath);\r\n\r\n                String jsonString = gson.toJson(allenamento);\r\n\r\n                // Step 2: Convert the JSON string to a JsonObject\r\n                JsonObject jsonObject = JsonParser.parseString(jsonString).getAsJsonObject();\r\n\r\n                //salvataggio dell'oggetto serializzato utente nel file json\r\n                writer.write(gson.toJson(jsonObject));\r\n                writer.close();\r\n            }\r\n        } catch (Exception e) {\r\n            throw new EccezioneGenerica(e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void inserisciAllenamentoAdUtente(Allenamento allenamento, Utente utente) {\r\n\r\n        creaAllenamento(allenamento);\r\n\r\n        UtenteDAOJSON utenteDAOJSON = new UtenteDAOJSON();\r\n        utenteDAOJSON.aggiornaUtente(utente);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/engineering/dao/AllenamentoDAOJSON.java b/src/main/java/engineering/dao/AllenamentoDAOJSON.java
--- a/src/main/java/engineering/dao/AllenamentoDAOJSON.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/engineering/dao/AllenamentoDAOJSON.java	(date 1736256795362)
@@ -32,15 +32,22 @@
             } catch (IOException e) {
                 //creazione del file con nome username dell'utente in formato json
 
+                System.out.println("CreaAllenamento 1 ");
+
                 // Create a Gson object
                 Gson gson = new GsonBuilder().setPrettyPrinting().create();
                 FileWriter writer = new FileWriter(filePath);
 
+                System.out.println("CreaAllenamento 2 ");
+
                 String jsonString = gson.toJson(allenamento);
 
+                System.out.println("CreaAllenamento 3 ");
+
                 // Step 2: Convert the JSON string to a JsonObject
                 JsonObject jsonObject = JsonParser.parseString(jsonString).getAsJsonObject();
 
+                System.out.println("CreaAllenamento 4 ");
                 //salvataggio dell'oggetto serializzato utente nel file json
                 writer.write(gson.toJson(jsonObject));
                 writer.close();
@@ -54,7 +61,6 @@
     public void inserisciAllenamentoAdUtente(Allenamento allenamento, Utente utente) {
 
         creaAllenamento(allenamento);
-
         UtenteDAOJSON utenteDAOJSON = new UtenteDAOJSON();
         utenteDAOJSON.aggiornaUtente(utente);
     }
Index: src/main/java/viste/first/HomepageAllenatoreGrafico.java
===================================================================
diff --git a/src/main/java/viste/first/HomepageAllenatoreGrafico.java b/src/main/java/viste/first/HomepageAllenatoreGrafico.java
deleted file mode 100644
--- a/src/main/java/viste/first/HomepageAllenatoreGrafico.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ /dev/null	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
@@ -1,91 +0,0 @@
-package viste.first;
-
-import controllerApplicativo.HomepageAllenatoreControllerApplicativo;
-import engineering.bean.AllenatoreBean;
-import engineering.bean.UtenteBean;
-import engineering.eccezioni.EccezioneGenerica;
-import javafx.event.ActionEvent;
-import javafx.fxml.FXML;
-import javafx.scene.control.Button;
-import javafx.scene.control.Label;
-import javafx.stage.Stage;
-import viste.first.utils.CambioScena;
-
-import static viste.first.utils.FxmlFileName.*;
-
-public class HomepageAllenatoreGrafico {
-
-
-    public void initialize() {
-        System.out.println("Inizializzazione Temporanea della Pagina Principale");
-    }
-
-    @FXML
-    private Label mostraErrori;
-
-    @FXML
-    private Button creaSquadra;
-
-    @FXML
-    private Button creaAllenamento;
-
-    @FXML
-    protected void RitornoAlLogin(ActionEvent event) {
-
-        System.out.println("Ritorno al Login");
-
-        //cambio scena alla pagina di login
-        try {
-            Stage stage = (Stage) creaAllenamento.getScene().getWindow();
-            CambioScena cambioScena = new CambioScena();
-            cambioScena.cambioScena(stage, PAGINA_PRINCIPALE);
-
-        } catch (EccezioneGenerica EccezioneGenerica) {
-            System.out.println(EccezioneGenerica.getMessage());
-        }
-    }
-
-    @FXML
-    protected void CreaAllenamento(ActionEvent event) {
-
-        System.out.println("Creazione Allenamento");
-
-        //cambio scena alla pagina di creazione dell'allenamento
-        try {
-            Stage stage = (Stage) creaAllenamento.getScene().getWindow();
-            CambioScena cambioScena = new CambioScena();
-            cambioScena.cambioScena(stage, PAGINA_CREAZIONE_ALLENAMENTO);
-
-        } catch (EccezioneGenerica EccezioneGenerica) {
-            System.out.println(EccezioneGenerica.getMessage());
-        }
-    }
-
-    @FXML
-    protected void CreaSquadra(ActionEvent event) {
-
-        try {
-            System.out.println("Creazione Squadra");
-
-            //cambio scena alla prima vista dove compiamo la creazione della squadra
-
-            //passo al controller applicativo il bean dell'utente che sta richiedendo la creazione della squadra codì che possa fare il cambio scena
-            HomepageAllenatoreControllerApplicativo paginaPrincipaleControllerApplicativo = new HomepageAllenatoreControllerApplicativo();
-            paginaPrincipaleControllerApplicativo.CreaSquadra();
-
-
-            try {
-                Stage stage = (Stage) creaSquadra.getScene().getWindow();
-                CambioScena cambioScena = new CambioScena();
-                cambioScena.cambioScena(stage, PAGINA_CREAZIONE_SQUADRA);
-
-            } catch (EccezioneGenerica EccezioneGenerica) {
-                mostraErrori.setText(EccezioneGenerica.getMessage());
-            }
-        }
-        catch (EccezioneGenerica e) {
-            mostraErrori.setText(e.getMessage());
-        }
-
-    }
-}
Index: src/main/resources/persistenza/allenamenti/13-9-2050.json
===================================================================
diff --git a/src/main/resources/persistenza/allenamenti/13-9-2050.json b/src/main/resources/persistenza/allenamenti/13-9-2050.json
deleted file mode 100644
--- a/src/main/resources/persistenza/allenamenti/13-9-2050.json	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ /dev/null	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
@@ -1,5 +0,0 @@
-{
-  "data": "13-9-2050",
-  "durata": 110,
-  "descrizione": ""
-}
\ No newline at end of file
Index: src/main/resources/persistenza/allenamenti/19-9-2039.json
===================================================================
diff --git a/src/main/resources/persistenza/allenamenti/19-9-2039.json b/src/main/resources/persistenza/allenamenti/19-9-2039.json
deleted file mode 100644
--- a/src/main/resources/persistenza/allenamenti/19-9-2039.json	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ /dev/null	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
@@ -1,5 +0,0 @@
-{
-  "data": "19-9-2039",
-  "durata": 20,
-  "descrizione": ""
-}
\ No newline at end of file
Index: src/main/java/controllerApplicativo/LoginControllerApplicativo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllerApplicativo;\r\n\r\nimport engineering.bean.*;\r\nimport engineering.dao.UtenteDAO;\r\nimport engineering.dao.UtenteDAOJSON;\r\nimport engineering.dao.UtenteDAOMySQL;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport engineering.pattern.Singleton;\r\nimport engineering.pattern.abstract_factory.DAOFactory;\r\nimport modelli.Allenatore;\r\nimport modelli.Giocatore;\r\nimport modelli.Login;\r\nimport modelli.Utente;\r\n\r\npublic class LoginControllerApplicativo {\r\n\r\n    public LoginControllerApplicativo() {\r\n    }\r\n\r\n    public Boolean verificaCredenziali(LoginBean loginBean) {\r\n\r\n        //controllo delle credenziali\r\n\r\n        //creo un utente da passare all'interno del sistema\r\n        Login login = new Login(loginBean.getEmail(), loginBean.getPassword());\r\n        UtenteDAO utenteDao = DAOFactory.getDAOFactory().createUtenteDAO();\r\n\r\n        //vedo se l'utente esiste nel singleton\r\n        Singleton istanza=Singleton.getInstance();\r\n\r\n        //se esiste ritorno true\r\n        if(istanza.esisteUtenteDaLogin(login)) {\r\n            return true;}\r\n\r\n        else {\r\n            System.out.println(\"Login in corso\");\r\n            //recupero l'utente dal login e lo restituisco\r\n            return utenteDao.esisteUtenteDaLogin(login);\r\n        }\r\n\r\n    }\r\n\r\n    public UtenteBean recuperoUtente(LoginBean loginBean) {\r\n\r\n        UtenteDAO utenteDao = DAOFactory.getDAOFactory().createUtenteDAO();\r\n\r\n\r\n        //vedo se l'utente esiste nel singleton\r\n        Singleton istanza=Singleton.getInstance();\r\n        Login login = new Login(loginBean.getEmail(), loginBean.getPassword());\r\n        //se esiste nel singleton, lo recupero e lo restituisco\r\n        if(istanza.esisteUtenteDaLogin(login)) {\r\n\r\n            //inizializzo il modello all'interno del sistema per l'utilizzo\r\n            Utente utente= istanza.getUtenteDaLogin(new Login(loginBean.getEmail(), loginBean.getPassword()));\r\n\r\n            //salvo all'interno del singleton l'utente con utenteCorrente\r\n            istanza.setUtenteCorrente(utente);\r\n            if (utente.getAllenatore()) {\r\n                return new AllenatoreBean(utente.getUsername(), utente.getEmail(), utente.getPassword() , utente.getAllenamenti(), utente.getSquadra());\r\n            }\r\n            else {\r\n                return new GiocatoreBean(utente.getUsername(), utente.getEmail(), utente.getPassword(), utente.getAllenamenti(), utente.getSquadra());\r\n            }\r\n        }\r\n\r\n        else {\r\n            //creazione del modello utente\r\n            System.out.println(\"Recupero l'utente \"+ loginBean.getEmail() +\" con password \"+ loginBean.getPassword() + \"dalla persistenza\");\r\n\r\n            //creo una nuova istanza di utente che contiene l'utente che fa uso del sistema\r\n            Utente utente = utenteDao.recuperaUtenteDaLogin(new Login(loginBean.getEmail(), loginBean.getPassword()));\r\n\r\n            //salvo all'interno del singleton l'utente come utenteCorrente\r\n            istanza.setUtenteCorrente(utente);\r\n\r\n            //salvo l'utente all'interno del singleton nella lista di utenti che hanno fatto uso del sistema\r\n            istanza.aggiungiUtente(utente);\r\n\r\n            //creazione del bean utente in funzioni che sia un allenatore o un giocatore\r\n            if (utente.getAllenatore()) {\r\n\r\n                //restituzione del bean dell'allenatore creato\r\n                return new AllenatoreBean(utente.getUsername(), utente.getEmail(), utente.getPassword() , utente.getAllenamenti(), utente.getSquadra());\r\n            }\r\n\r\n            else {\r\n\r\n                //restituzione del bean del giocatore creato\r\n                return new GiocatoreBean(utente.getUsername(), utente.getEmail(), utente.getPassword(), utente.getAllenamenti(), utente.getSquadra());\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllerApplicativo/LoginControllerApplicativo.java b/src/main/java/controllerApplicativo/LoginControllerApplicativo.java
--- a/src/main/java/controllerApplicativo/LoginControllerApplicativo.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/controllerApplicativo/LoginControllerApplicativo.java	(date 1736250240148)
@@ -2,13 +2,9 @@
 
 import engineering.bean.*;
 import engineering.dao.UtenteDAO;
-import engineering.dao.UtenteDAOJSON;
-import engineering.dao.UtenteDAOMySQL;
 import engineering.eccezioni.EccezioneGenerica;
 import engineering.pattern.Singleton;
 import engineering.pattern.abstract_factory.DAOFactory;
-import modelli.Allenatore;
-import modelli.Giocatore;
 import modelli.Login;
 import modelli.Utente;
 
@@ -17,23 +13,33 @@
     public LoginControllerApplicativo() {
     }
 
+    public void setDemo(Boolean demo) {
+        Singleton.getInstance().setDemo(demo);
+    }
+
     public Boolean verificaCredenziali(LoginBean loginBean) {
 
         //controllo delle credenziali
 
         //creo un utente da passare all'interno del sistema
         Login login = new Login(loginBean.getEmail(), loginBean.getPassword());
-        UtenteDAO utenteDao = DAOFactory.getDAOFactory().createUtenteDAO();
 
         //vedo se l'utente esiste nel singleton
         Singleton istanza=Singleton.getInstance();
 
-        //se esiste ritorno true
-        if(istanza.esisteUtenteDaLogin(login)) {
-            return true;}
+        //creazione del dao per controllare le credenziali
+        UtenteDAO utenteDao = DAOFactory.getDAOFactory().createUtenteDAO();
+
+        //controllo che l'utente esiste nel singleton
+        if(istanza.esisteUtenteDaLogin(login)) {return true;}
+
+        /*
+        if else(istanza.getDemo()){
+        return false;}
+         */
 
         else {
-            System.out.println("Login in corso");
+
             //recupero l'utente dal login e lo restituisco
             return utenteDao.esisteUtenteDaLogin(login);
         }
@@ -64,6 +70,11 @@
             }
         }
 
+        /*
+        else if(istanza.getDemo()){
+        throw new EccezioneGenerica("Utente non esistente");}
+         */
+
         else {
             //creazione del modello utente
             System.out.println("Recupero l'utente "+ loginBean.getEmail() +" con password "+ loginBean.getPassword() + "dalla persistenza");
Index: src/main/java/engineering/query/QuerySquadra.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package engineering.query;\r\n\r\nimport engineering.altro.Connessione;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\n\r\npublic class QuerySquadra {\r\n\r\n\r\n    public static String creaSquadraQuery = \"insert into squadra (codice, utenti_email) values (?, ?)\";\r\n\r\n    public static int createSquadra(Connection connection, String nomeSquadra , String utenti_email) throws EccezioneGenerica {\r\n        try {\r\n\r\n            //creazione della query parametrica\r\n            String query= \"INSERT INTO squadra (codice, utenti_email) VALUES (?, ?)\";\r\n\r\n            //preparazione dello statement\r\n            Connection conn = Connessione.getInstance().getDBConnection();\r\n\r\n            PreparedStatement statement = conn.prepareStatement(query);\r\n\r\n            //setting dei parametri della query\r\n            statement.setString(1, nomeSquadra);\r\n            statement.setString(2, utenti_email);\r\n\r\n            //esecuzione della query e restituzione del risultato\r\n            int i=0;\r\n\r\n\r\n            System.out.println(\"email: \"+utenti_email + \" nome squadra: \"+nomeSquadra);\r\n            i=statement.executeUpdate();\r\n            System.out.println(\"Non lo so,facciamo la seconda prova\");\r\n            return  i;\r\n\r\n\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            throw new EccezioneGenerica(e.getMessage());\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/engineering/query/QuerySquadra.java b/src/main/java/engineering/query/QuerySquadra.java
--- a/src/main/java/engineering/query/QuerySquadra.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/engineering/query/QuerySquadra.java	(date 1736189950432)
@@ -38,7 +38,7 @@
 
 
         } catch (SQLException e) {
-            e.printStackTrace();
+            System.out.println(e.getMessage());
             throw new EccezioneGenerica(e.getMessage());
         }
     }
Index: src/main/resources/viste/homepageGiocatore.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.text.Font?>\r\n<?import javafx.scene.text.Text?>\r\n\r\n<AnchorPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/21\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"viste.first.HomepageGiocatoreCtrlGrafico\">\r\n\r\n    <children>\r\n        <AnchorPane prefHeight=\"80.0\" prefWidth=\"600.0\" style=\"-fx-background-color: #0f9200;\">\r\n            <children>\r\n                <Label layoutX=\"270.0\" layoutY=\"26.0\" text=\"Home\" textFill=\"WHITE\">\r\n                    <font>\r\n                        <Font name=\"MS Outlook\" size=\"25.0\" />\r\n                    </font>\r\n                </Label>\r\n            </children>\r\n        </AnchorPane>\r\n        <Button fx:id=\"EntraInSquadraButton\" layoutX=\"210.0\" layoutY=\"259.0\" mnemonicParsing=\"false\" prefHeight=\"68.0\" prefWidth=\"180.0\" text=\"Entra in una squadra\"/>\r\n        <Button fx:id=\"consultaAllenamentiButton\" layoutX=\"210.0\" layoutY=\"177.0\" mnemonicParsing=\"false\" prefHeight=\"68.0\" prefWidth=\"180.0\" text=\"Consulta allenamenti\"/>\r\n        <Text fx:id=\"ciaoText\" layoutX=\"35.0\" layoutY=\"112.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Ciao\" />\r\n        <Label fx:id=\"welcomeLabel\" layoutX=\"67.0\" layoutY=\"99.0\" text=\"Label\" />\r\n    </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/viste/homepageGiocatore.fxml b/src/main/resources/viste/homepageGiocatore.fxml
--- a/src/main/resources/viste/homepageGiocatore.fxml	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/resources/viste/homepageGiocatore.fxml	(date 1736241733222)
@@ -22,5 +22,6 @@
         <Button fx:id="consultaAllenamentiButton" layoutX="210.0" layoutY="177.0" mnemonicParsing="false" prefHeight="68.0" prefWidth="180.0" text="Consulta allenamenti"/>
         <Text fx:id="ciaoText" layoutX="35.0" layoutY="112.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Ciao" />
         <Label fx:id="welcomeLabel" layoutX="67.0" layoutY="99.0" text="Label" />
+        <Button fx:id="logoutButton" layoutX="210.0" layoutY="341.0" mnemonicParsing="false" onAction="#RitornoAlLogin" prefHeight="68.0" prefWidth="180.0" text="Logout"/>
     </children>
 </AnchorPane>
Index: src/main/java/controllerApplicativo/RegistrazioneCtrlApplicativo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllerApplicativo;\r\n\r\nimport engineering.bean.RegistrazioneBean;\r\nimport engineering.dao.UtenteDAO;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport engineering.pattern.Singleton;\r\nimport engineering.pattern.abstract_factory.DAOFactory;\r\nimport modelli.Allenatore;\r\nimport modelli.Giocatore;\r\nimport modelli.Registrazione;\r\nimport modelli.Utente;\r\n\r\npublic class RegistrazioneCtrlApplicativo {\r\n\r\n    public void inserisciUtente(RegistrazioneBean registrazioneBean) throws Exception {\r\n        String username = registrazioneBean.getUsername();\r\n        String email = registrazioneBean.getEmail();\r\n        String password = registrazioneBean.getPassword();\r\n        boolean isAllenatore = registrazioneBean.getAllenatore();\r\n\r\n        // Verifica che tutti i campi siano compilati\r\n        if (username.isEmpty() || email.isEmpty() || password.isEmpty()) {\r\n            throw new Exception(\"Tutti i campi sono obbligatori!\");\r\n        }\r\n\r\n        // Creazione del modello registrazione\r\n        Registrazione registrazione = new Registrazione(username, email, password, isAllenatore);\r\n\r\n        //controllo che l'utente esisti già nel singleton\r\n        Singleton istanza = Singleton.getInstance();\r\n        if (istanza.esisteUtenteDaRegistrazione(registrazione)) {\r\n            throw new Exception(\"Utente già registrato!\");\r\n        }\r\n\r\n        // Utilizzo del DAO per salvare l'utente\r\n        UtenteDAO UtenteDAO = DAOFactory.getDAOFactory().createUtenteDAO();\r\n\r\n        try {\r\n            UtenteDAO.inserisciUtenteDaRegistrazione(registrazione);\r\n            istanza.aggiungiRegistrazione(registrazione);\r\n\r\n            if (registrazione.getAllenatore()) {\r\n                Utente utente = new Allenatore(username, email, password);\r\n            }\r\n\r\n            else {\r\n                Utente utente = new Giocatore(username, email, password);\r\n\r\n            }\r\n            //gestione del cambio di scena per tornare alla pagina principale\r\n\r\n        } catch (EccezioneGenerica e) {\r\n            throw new Exception(e.getMessage());\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllerApplicativo/RegistrazioneCtrlApplicativo.java b/src/main/java/controllerApplicativo/RegistrazioneCtrlApplicativo.java
--- a/src/main/java/controllerApplicativo/RegistrazioneCtrlApplicativo.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/controllerApplicativo/RegistrazioneCtrlApplicativo.java	(date 1736190433731)
@@ -35,20 +35,11 @@
         // Utilizzo del DAO per salvare l'utente
         UtenteDAO UtenteDAO = DAOFactory.getDAOFactory().createUtenteDAO();
 
+        //aggiungo l'utente al singleton e alla persistenza
         try {
             UtenteDAO.inserisciUtenteDaRegistrazione(registrazione);
             istanza.aggiungiRegistrazione(registrazione);
 
-            if (registrazione.getAllenatore()) {
-                Utente utente = new Allenatore(username, email, password);
-            }
-
-            else {
-                Utente utente = new Giocatore(username, email, password);
-
-            }
-            //gestione del cambio di scena per tornare alla pagina principale
-
         } catch (EccezioneGenerica e) {
             throw new Exception(e.getMessage());
         }
Index: src/main/java/viste/first/HomepageGiocatoreCtrlGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package viste.first;\r\n\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Scene;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Modality;\r\nimport javafx.stage.Stage;\r\nimport viste.first.utils.CambioScena;\r\n\r\nimport java.net.URL;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static viste.first.utils.FxmlFileName.PAGINA_ENTRAINSQUADRA;\r\n\r\n\r\npublic class HomepageGiocatoreCtrlGrafico implements  Initializable{\r\n\r\n    @FXML\r\n    private Button EntraInSquadraButton;\r\n\r\n    @FXML\r\n    private Button consultaAllenamentiButton;\r\n\r\n    @FXML\r\n    private Text ciaoText;\r\n\r\n    @FXML\r\n    private Label welcomeLabel;\r\n\r\n    private String username;\r\n\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        EntraInSquadraButton.setOnAction(event -> handleEntraInSquadraButtonAction());\r\n        consultaAllenamentiButton.setOnAction(event -> handleConsultaAllenamentiButtonAction());\r\n        welcomeLabel.setText(\"Ciao \" + username);\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    @FXML\r\n    private void handleEntraInSquadraButtonAction() {\r\n        try {\r\n            Stage stage = (Stage) EntraInSquadraButton.getScene().getWindow();\r\n            CambioScena cambioScena = new CambioScena();\r\n            cambioScena.cambioScena(stage, PAGINA_ENTRAINSQUADRA);\r\n\r\n        } catch (EccezioneGenerica eccezioneGenerica) {\r\n            System.out.println(eccezioneGenerica.getMessage());\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    private void handleConsultaAllenamentiButtonAction() {\r\n        // Logica per il pulsante \"Consulta allenamenti\"\r\n        System.out.println(\"Consulta allenamenti cliccato\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/viste/first/HomepageGiocatoreCtrlGrafico.java b/src/main/java/viste/first/HomepageGiocatoreCtrlGrafico.java
--- a/src/main/java/viste/first/HomepageGiocatoreCtrlGrafico.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/viste/first/HomepageGiocatoreCtrlGrafico.java	(date 1736241733222)
@@ -16,6 +16,7 @@
 import java.util.ResourceBundle;
 
 import static viste.first.utils.FxmlFileName.PAGINA_ENTRAINSQUADRA;
+import static viste.first.utils.FxmlFileName.PAGINA_PRINCIPALE;
 
 
 public class HomepageGiocatoreCtrlGrafico implements  Initializable{
@@ -34,6 +35,20 @@
 
     private String username;
 
+    @FXML
+    protected void RitornoAlLogin() {
+        System.out.println("Ritorno al Login");
+
+        //cambio scena alla pagina di login
+        try {
+            Stage stage = (Stage) ciaoText.getScene().getWindow();
+            CambioScena cambioScena = new CambioScena();
+            cambioScena.cambioScena(stage, PAGINA_PRINCIPALE);
+
+        } catch (EccezioneGenerica EccezioneGenerica) {
+            System.out.println(EccezioneGenerica.getMessage());
+        }
+    }
 
     @Override
     public void initialize(URL location, ResourceBundle resources) {
Index: src/main/java/viste/first/RegistrazioneCtrlGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package viste.first;\r\n\r\nimport controllerApplicativo.RegistrazioneCtrlApplicativo;\r\nimport engineering.bean.RegistrazioneBean;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.*;\r\nimport javafx.stage.Stage;\r\nimport viste.first.utils.CambioScena;\r\n\r\nimport java.net.URL;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static viste.first.utils.FxmlFileName.*;\r\nimport static viste.first.utils.FxmlFileName.PAGINA_HOME_GIOCATORE;\r\n\r\npublic class RegistrazioneCtrlGrafico implements Initializable {\r\n\r\n    @FXML\r\n    private TextField usernameTextField;\r\n    @FXML\r\n    private TextField emailTextField;\r\n    @FXML\r\n    private PasswordField passwordTextField;\r\n    @FXML\r\n    private PasswordField confermaPasswordTextField;\r\n    @FXML\r\n    private CheckBox allenatoreCheckBox;\r\n    @FXML\r\n    private Button registratiButton;\r\n    @FXML\r\n    private Button tornaLoginButton;\r\n    @FXML\r\n    private Label registrazioneAvvenuta;\r\n\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        registratiButton.setOnAction(event -> handleRegistratiButton());\r\n        tornaLoginButton.setOnAction(event -> handleTornaLoginButton());\r\n    }\r\n\r\n    public void initialize()\r\n    {\r\n        System.out.println(\"Inizializzazione Temporanea\");\r\n    }\r\n\r\n    private void handleRegistratiButton() {\r\n        String username = usernameTextField.getText();\r\n        String email = emailTextField.getText();\r\n        String password = passwordTextField.getText();\r\n        String confermaPassword = confermaPasswordTextField.getText();\r\n        boolean isAllenatore = allenatoreCheckBox.isSelected();\r\n\r\n        //se le password coincidono continuiamo con il salvataggio nel sistema della registrazione\r\n        if (password.equals(confermaPassword)) {\r\n\r\n            //creiamo il bean per la registrazione\r\n            RegistrazioneBean registrazioneBean = new RegistrazioneBean(username, email, password, isAllenatore);\r\n\r\n            //creiamo il controller applicativo per la registrazione\r\n            RegistrazioneCtrlApplicativo registrazioneCtrlApplicativo = new RegistrazioneCtrlApplicativo();\r\n\r\n            try {\r\n\r\n                registrazioneCtrlApplicativo.inserisciUtente(registrazioneBean);\r\n                System.out.println(\"Registrazione avvenuta con successo!\");\r\n\r\n                Stage stage = (Stage) registrazioneAvvenuta.getScene().getWindow();\r\n                CambioScena cambioScena = new CambioScena();\r\n\r\n                //codice temporaneo per il cambio di scena alla home page del giocatore o allenatore\r\n                if (registrazioneBean.getAllenatore()) {\r\n                    cambioScena.cambioScena(stage, PAGINA_HOME_ALLENATORE);\r\n                } else {\r\n                    cambioScena.cambioScena(stage, PAGINA_HOME_GIOCATORE);\r\n                }\r\n\r\n            } catch (Exception e) {\r\n                registrazioneAvvenuta.setText(e.getMessage());\r\n                registrazioneAvvenuta.setVisible(true);\r\n            }\r\n        } else {\r\n            registrazioneAvvenuta.setText(\"Le password non coincidono!\");\r\n            registrazioneAvvenuta.setVisible(true);\r\n        }\r\n    }\r\n\r\n    private void handleTornaLoginButton() {\r\n        // Logica per tornare alla schermata di login\r\n        System.out.println(\"Torno alla schermata di login\");\r\n\r\n        //CODICE TEMPORANEO PER IL PASSAGGIO DI SCENE ALLA PAGINA DI REGISTRAZIONE\r\n        try {\r\n            Stage stage = (Stage) tornaLoginButton.getScene().getWindow();\r\n            CambioScena cambioScena = new CambioScena();\r\n            cambioScena.cambioScena(stage, PAGINA_PRINCIPALE);\r\n\r\n        } catch (EccezioneGenerica eccezioneGenerica) {\r\n            System.out.println(eccezioneGenerica.getMessage());\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/viste/first/RegistrazioneCtrlGrafico.java b/src/main/java/viste/first/RegistrazioneCtrlGrafico.java
--- a/src/main/java/viste/first/RegistrazioneCtrlGrafico.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/viste/first/RegistrazioneCtrlGrafico.java	(date 1736190433685)
@@ -64,9 +64,11 @@
 
             try {
 
+                //tentiamo di registrare l'utente
                 registrazioneCtrlApplicativo.inserisciUtente(registrazioneBean);
                 System.out.println("Registrazione avvenuta con successo!");
 
+                //a registrazione avvenuta, cambiamo scena
                 Stage stage = (Stage) registrazioneAvvenuta.getScene().getWindow();
                 CambioScena cambioScena = new CambioScena();
 
Index: src/main/java/viste/first/LoginControllerGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package viste.first;\r\n\r\nimport engineering.bean.UtenteBean;\r\nimport engineering.bean.LoginBean;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.event.ActionEvent;\r\n\r\nimport java.io.IOException;\r\n\r\nimport controllerApplicativo.LoginControllerApplicativo;\r\nimport javafx.stage.Stage;\r\nimport viste.first.utils.CambioScena;\r\n\r\nimport static viste.first.utils.FxmlFileName.*;\r\n\r\npublic class LoginControllerGrafico {\r\n\r\n    @FXML\r\n    private Button login;\r\n\r\n    @FXML\r\n    private RadioButton demo;\r\n\r\n    @FXML\r\n    private RadioButton full;\r\n\r\n    @FXML\r\n    private TextField email;\r\n\r\n    @FXML\r\n    private PasswordField password;\r\n\r\n    @FXML\r\n    private Button registr;\r\n\r\n    @FXML\r\n    private Label erroreInserimento;\r\n\r\n    @FXML\r\n    private void initialize() {\r\n        ToggleGroup group = new ToggleGroup();\r\n        demo.setToggleGroup(group);\r\n        full.setToggleGroup(group);\r\n        full.setSelected(true);\r\n    }\r\n\r\n\r\n\r\n    @FXML\r\n    protected void userLogin(ActionEvent event) throws IOException {\r\n        String em = email.getText().trim();           //accesso con email\r\n        String pass = password.getText().trim();\r\n\r\n        if (em.isEmpty() || pass.isEmpty()) {\r\n            erroreInserimento.setText(\"There are empty fields!\");\r\n            erroreInserimento.setVisible(true);\r\n        }\r\n\r\n        else if(demo.isSelected())\r\n        {\r\n            System.out.println(\"Demo\");\r\n        }\r\n\r\n        else\r\n        {\r\n            try{\r\n                //istanziazione del bean per il login\r\n                LoginBean loginBean = new LoginBean(em,pass);\r\n\r\n                //creazione del controler applicativo per il login\r\n                LoginControllerApplicativo loginControllerApplicativo = new LoginControllerApplicativo();\r\n\r\n                //passaggio del bean al controller applicativo per il controllo delle credenziali\r\n                if(!loginControllerApplicativo.verificaCredenziali(loginBean)){\r\n                    throw new EccezioneGenerica(\"Credenziali errate\");\r\n                }\r\n\r\n                //creazione del bean utente generico in funzione dei dati del bean di login\r\n                UtenteBean utenteBean = loginControllerApplicativo.recuperoUtente(loginBean);\r\n\r\n                Stage stage = (Stage) email.getScene().getWindow();\r\n                CambioScena cambioScena = new CambioScena();\r\n\r\n                //codice temporaneo per il cambio di scena alla home page del giocatore o allenatore\r\n                if (utenteBean.getAllenatore()) {\r\n                    cambioScena.cambioScena(stage, PAGINA_HOME_ALLENATORE);\r\n                } else {\r\n                    cambioScena.cambioScena(stage, PAGINA_HOME_GIOCATORE);\r\n                }\r\n\r\n\r\n            } catch (Exception e){\r\n                erroreInserimento.setText(e.getMessage());\r\n                erroreInserimento.setVisible(true);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    protected void registrazione(ActionEvent event) throws IOException {\r\n        System.out.println(\"registrazione\");\r\n        //implemento di cambio di scena all pagina di registrazione\r\n\r\n\r\n        //CODICE TEMPORANEO PER IL PASSAGGIO DI SCENE ALLA PAGINA DI REGISTRAZIONE\r\n        try {\r\n            Stage stage = (Stage) email.getScene().getWindow();\r\n            CambioScena cambioScena = new CambioScena();\r\n            cambioScena.cambioScena(stage, PAGINA_REGISTRAZIONE);\r\n\r\n        } catch (EccezioneGenerica eccezioneGenerica) {\r\n            System.out.println(eccezioneGenerica.getMessage());\r\n        }\r\n    }\r\n    public static class CreazioneAllenamentoControllerGrafico {\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/viste/first/LoginControllerGrafico.java b/src/main/java/viste/first/LoginControllerGrafico.java
--- a/src/main/java/viste/first/LoginControllerGrafico.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/viste/first/LoginControllerGrafico.java	(date 1736246944859)
@@ -58,19 +58,20 @@
             erroreInserimento.setVisible(true);
         }
 
-        else if(demo.isSelected())
-        {
-            System.out.println("Demo");
+        LoginControllerApplicativo loginControllerApplicativo = new LoginControllerApplicativo();
+
+        if(demo.isSelected()) {
+            loginControllerApplicativo.setDemo(true);
         }
 
         else
         {
+            loginControllerApplicativo.setDemo(false);
             try{
                 //istanziazione del bean per il login
                 LoginBean loginBean = new LoginBean(em,pass);
 
                 //creazione del controler applicativo per il login
-                LoginControllerApplicativo loginControllerApplicativo = new LoginControllerApplicativo();
 
                 //passaggio del bean al controller applicativo per il controllo delle credenziali
                 if(!loginControllerApplicativo.verificaCredenziali(loginBean)){
Index: src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllerApplicativo;\r\n\r\nimport engineering.bean.UtenteBean;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport engineering.pattern.Singleton;\r\nimport modelli.Utente;\r\nimport viste.first.HomepageAllenatoreGrafico;\r\n\r\nimport java.util.Objects;\r\n\r\npublic class HomepageAllenatoreControllerApplicativo\r\n{\r\n\r\n    public HomepageAllenatoreControllerApplicativo() {\r\n    }\r\n\r\n    public void CreaSquadra() throws EccezioneGenerica{\r\n        Singleton istanza= Singleton.getInstance();\r\n        Utente utente= istanza.getUtenteCorrente();\r\n\r\n        //implemento i controlli sull'allenatore che richiedere la creazione della Squadra\r\n        if (!utente.getSquadra().getNome().isEmpty()) {\r\n            System.out.println(\"L'allenatore ha già una squadra\");\r\n            throw new EccezioneGenerica(\"L'allenatore ha già una squadra\");\r\n\r\n        } else {\r\n            System.out.println(\"L'allenatore non ha una squadra e procedo alla creazione della squadra\");\r\n\r\n            //compio il cambio della scena\r\n            /*\r\n            //Nota che il cambio scena deve avvenire qui. Nel codice temporaneo do la responsabilità al controller grafico\r\n            HomepageAllenatoreGrafico homepageAllenatoreGrafico = new HomepageAllenatoreGrafico();\r\n\r\n            System.out.println(\"Cambio scena alla creazione della squadra\");\r\n\r\n            homepageAllenatoreGrafico.CodiceTemporaneoPerCambioScena();\r\n             */\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java b/src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java
--- a/src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java	(date 1736251028352)
@@ -1,17 +1,46 @@
 package controllerApplicativo;
 
-import engineering.bean.UtenteBean;
 import engineering.eccezioni.EccezioneGenerica;
 import engineering.pattern.Singleton;
 import modelli.Utente;
-import viste.first.HomepageAllenatoreGrafico;
-
-import java.util.Objects;
 
 public class HomepageAllenatoreControllerApplicativo
 {
 
     public HomepageAllenatoreControllerApplicativo() {
+        //costruttore vuoto di default del controllore applicativo
+    }
+
+    public Boolean esisteSquadra(){
+
+        Singleton istanza= Singleton.getInstance();
+        Utente utente= istanza.getUtenteCorrente();
+
+        if (utente.getSquadra().getNome().isEmpty()) {
+            System.out.println("L'allenatore non ha una squadra");
+            return false;
+        }
+        else {
+            System.out.println("L'allenatore ha una squadra");
+            return true;
+        }
+    }
+
+    /*
+    public void GestisciSquadra() throws EccezioneGenerica{
+        Singleton istanza= Singleton.getInstance();
+        Utente utente= istanza.getUtenteCorrente();
+
+        //implemento i controlli sull'allenatore che richiedere la gestione della Squadra
+        if (utente.getSquadra().getNome().isEmpty()) {
+            System.out.println("L'allenatore non ha una squadra");
+            throw new EccezioneGenerica("L'allenatore non ha una squadra");
+
+        } else {
+            System.out.println("L'allenatore ha una squadra e procedo alla gestione della squadra");
+
+            //compio il cambio della scena
+        }
     }
 
     public void CreaSquadra() throws EccezioneGenerica{
@@ -27,14 +56,8 @@
             System.out.println("L'allenatore non ha una squadra e procedo alla creazione della squadra");
 
             //compio il cambio della scena
-            /*
-            //Nota che il cambio scena deve avvenire qui. Nel codice temporaneo do la responsabilità al controller grafico
-            HomepageAllenatoreGrafico homepageAllenatoreGrafico = new HomepageAllenatoreGrafico();
+        }
+    }
 
-            System.out.println("Cambio scena alla creazione della squadra");
-
-            homepageAllenatoreGrafico.CodiceTemporaneoPerCambioScena();
-             */
-        }
-    }
+     */
 }
Index: src/main/resources/viste/homepageAllenatore.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n\r\n<AnchorPane prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/23\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"viste.first.HomepageAllenatoreGrafico\">\r\n   <children>\r\n      <Button fx:id=\"creaSquadra\" layoutX=\"244.0\" layoutY=\"50.0\" mnemonicParsing=\"false\" onAction=\"#CreaSquadra\" text=\"Creazione Squadra\" />\r\n      <Button fx:id=\"creaAllenamento\" layoutX=\"233.0\" layoutY=\"156.0\" mnemonicParsing=\"false\" onAction=\"#CreaAllenamento\" text=\"Creazione Allenamento\" />\r\n      <Label fx:id=\"mostraErrori\" layoutX=\"286.0\" layoutY=\"246.0\" textFill=\"RED\" />\r\n      <Button layoutX=\"250.0\" layoutY=\"291.0\" mnemonicParsing=\"false\" onAction=\"#RitornoAlLogin\" text=\"Ritorno Al Login\" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/viste/homepageAllenatore.fxml b/src/main/resources/viste/homepageAllenatore.fxml
--- a/src/main/resources/viste/homepageAllenatore.fxml	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/resources/viste/homepageAllenatore.fxml	(date 1736250839306)
@@ -4,10 +4,10 @@
 <?import javafx.scene.control.Label?>
 <?import javafx.scene.layout.AnchorPane?>
 
-<AnchorPane prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/23" xmlns:fx="http://javafx.com/fxml/1" fx:controller="viste.first.HomepageAllenatoreGrafico">
+<AnchorPane prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/23" xmlns:fx="http://javafx.com/fxml/1" fx:controller="viste.first.HomepageAllenatoreGraficoGrafico">
    <children>
-      <Button fx:id="creaSquadra" layoutX="244.0" layoutY="50.0" mnemonicParsing="false" onAction="#CreaSquadra" text="Creazione Squadra" />
-      <Button fx:id="creaAllenamento" layoutX="233.0" layoutY="156.0" mnemonicParsing="false" onAction="#CreaAllenamento" text="Creazione Allenamento" />
+      <Button fx:id="gestisciSquadra" layoutX="244.0" layoutY="50.0" mnemonicParsing="false" onAction="#GestisciSquadra" text="Gestisci Squadra" />
+      <Button layoutX="233.0" layoutY="156.0" mnemonicParsing="false" onAction="#CreaAllenamento" text="Creazione Allenamento" />
       <Label fx:id="mostraErrori" layoutX="286.0" layoutY="246.0" textFill="RED" />
       <Button layoutX="250.0" layoutY="291.0" mnemonicParsing="false" onAction="#RitornoAlLogin" text="Ritorno Al Login" />
    </children>
Index: src/main/java/viste/first/utils/FxmlFileName.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package viste.first.utils;\r\n\r\npublic class FxmlFileName {\r\n    private FxmlFileName(){}\r\n\r\n    public static final String PAGINA_PRINCIPALE = \"/viste/provaLogin.fxml\";\r\n    public static final String PAGINA_REGISTRAZIONE = \"/viste/registrazione.fxml\";\r\n    public static final String PAGINA_HOME_ALLENATORE = \"/viste/homepageAllenatore.fxml\";\r\n    public static final String PAGINA_HOME_GIOCATORE = \"/viste/homepageGiocatore.fxml\";\r\n    public static final String PAGINA_CREAZIONE_SQUADRA = \"/viste/creazioneSquadra.fxml\";\r\n    public static final String PAGINA_CREAZIONE_ALLENAMENTO = \"/viste/creazioneAllenamento.fxml\";\r\n    public static final String PAGINA_ENTRAINSQUADRA = \"/viste/entraInSquadra.fxml\";\r\n    public static final String PAGINA_CONSULTA_ALLENAMENTI = \"/viste/consultaAllenamenti.fxml\";\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/viste/first/utils/FxmlFileName.java b/src/main/java/viste/first/utils/FxmlFileName.java
--- a/src/main/java/viste/first/utils/FxmlFileName.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/viste/first/utils/FxmlFileName.java	(date 1736244986453)
@@ -10,6 +10,7 @@
     public static final String PAGINA_CREAZIONE_SQUADRA = "/viste/creazioneSquadra.fxml";
     public static final String PAGINA_CREAZIONE_ALLENAMENTO = "/viste/creazioneAllenamento.fxml";
     public static final String PAGINA_ENTRAINSQUADRA = "/viste/entraInSquadra.fxml";
+    public static final String PAGINA_GESTIONE_SQUADRA = "/viste/gestioneSquadra.fxml";
     public static final String PAGINA_CONSULTA_ALLENAMENTI = "/viste/consultaAllenamenti.fxml";
 }
 
Index: src/main/java/viste/first/HomepageAllenatoreGraficoGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/viste/first/HomepageAllenatoreGraficoGrafico.java b/src/main/java/viste/first/HomepageAllenatoreGraficoGrafico.java
new file mode 100644
--- /dev/null	(date 1736250839321)
+++ b/src/main/java/viste/first/HomepageAllenatoreGraficoGrafico.java	(date 1736250839321)
@@ -0,0 +1,107 @@
+package viste.first;
+
+import controllerApplicativo.HomepageAllenatoreControllerApplicativo;
+import engineering.eccezioni.EccezioneGenerica;
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.scene.control.Button;
+import javafx.scene.control.Label;
+import javafx.stage.Stage;
+import viste.first.utils.CambioScena;
+
+import static viste.first.utils.FxmlFileName.*;
+
+public class HomepageAllenatoreGraficoGrafico {
+
+
+    public void initialize() {
+        System.out.println("Inizializzazione Temporanea della Pagina Principale");
+    }
+
+    @FXML
+    private Label mostraErrori;
+
+    @FXML
+    private Button gestisciSquadra;
+
+    @FXML
+    protected void RitornoAlLogin(ActionEvent event) {
+
+        System.out.println("Ritorno al Login");
+
+        //cambio scena alla pagina di login
+        try {
+            Cambio(PAGINA_PRINCIPALE);
+
+        } catch (EccezioneGenerica EccezioneGenerica) {
+            System.out.println(EccezioneGenerica.getMessage());
+        }
+    }
+
+    @FXML
+    protected void CreaAllenamento(ActionEvent event) {
+
+        System.out.println("Creazione Allenamento");
+
+        //cambio scena alla pagina di creazione dell'allenamento
+        try {
+            Cambio(PAGINA_CREAZIONE_ALLENAMENTO);
+
+        } catch (EccezioneGenerica EccezioneGenerica) {
+            mostraErrori.setText(EccezioneGenerica.getMessage());
+        }
+    }
+
+    @FXML
+    protected void GestisciSquadra(ActionEvent event) {
+        //controlliamo che l'allenatore abbia o meno una squadra chiedendolo al controllore applicativo
+        HomepageAllenatoreControllerApplicativo paginaPrincipaleControllerApplicativo = new HomepageAllenatoreControllerApplicativo();
+
+        if(paginaPrincipaleControllerApplicativo.esisteSquadra()){
+            //Se l'allenatore ha una squadra allora compiamo il cambio scena alla pagina di gestione della squadra
+            System.out.println("Gestione Squadra");
+
+            //passo al controller applicativo il bean dell'utente che sta richiedendo la creazione della squadra codì che possa fare il cambio scena
+            //paginaPrincipaleControllerApplicativo.GestisciSquadra();
+
+            //cambio scena alla pagina di gestione della squadra
+            try {
+                Cambio(PAGINA_GESTIONE_SQUADRA);
+
+            } catch (EccezioneGenerica EccezioneGenerica) {
+                mostraErrori.setText(EccezioneGenerica.getMessage());
+            }
+        } 
+        else {
+            //Se l'allenatore non ha una squadra allora compiamo il cambio scena alla pagina di creazione della squadra
+            try {
+                System.out.println("Creazione Squadra");
+
+                //passo al controller applicativo il bean dell'utente che sta richiedendo la creazione della squadra codì che possa fare il cambio scena
+                //paginaPrincipaleControllerApplicativo.CreaSquadra();
+
+                //cambio scena alla prima vista dove compiamo la creazione della squadra
+                try {
+                    Cambio(PAGINA_CREAZIONE_SQUADRA);
+
+                } catch (EccezioneGenerica EccezioneGenerica) {
+                    mostraErrori.setText(EccezioneGenerica.getMessage());
+                }
+            }
+            catch (EccezioneGenerica e) {
+                mostraErrori.setText(e.getMessage());
+            }
+        }
+    }
+
+    private void Cambio(String paginaDiCambioScena) {
+        try {
+            Stage stage = (Stage) gestisciSquadra.getScene().getWindow();
+            CambioScena cambioScena = new CambioScena();
+            cambioScena.cambioScena(stage, paginaDiCambioScena);
+
+        } catch (EccezioneGenerica EccezioneGenerica) {
+            mostraErrori.setText(EccezioneGenerica.getMessage());
+        }
+    }
+}
Index: src/main/java/engineering/pattern/Singleton.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package engineering.pattern;\r\n\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport modelli.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Singleton {\r\n\r\n    //variabile statica che contiene l'istanza della classe\r\n    private static Singleton instance;\r\n\r\n    //variabili private dove vengono salvate le istanze\r\n    private List<Utente> utenti = new ArrayList<>();\r\n\r\n    //variabile privata che contiene l'istanza dell'utente che sta facendo uso del sistema\r\n    private Utente utenteCorrente;\r\n\r\n    private Singleton(){}\r\n\r\n    // static block initialization for exception handling\r\n    static {\r\n        try {\r\n            instance = new Singleton();\r\n        } catch (EccezioneGenerica e) {\r\n            throw new EccezioneGenerica(\"Exception occurred in creating singleton instance\");\r\n        }\r\n    }\r\n\r\n    public static Singleton getInstance() {\r\n        return instance;\r\n    }\r\n\r\n    //metodi pubblici per ottenere le istanze di tutti gli utenti istanziati nel sistema\r\n    public void aggiungiUtente(Utente utente) {utenti.add(utente);}\r\n\r\n    public Utente getUtenteCorrente() {return utenteCorrente;}\r\n    public void setUtenteCorrente(Utente utente) {utenteCorrente = utente;}\r\n\r\n    public List<Utente> getUtenti() {return utenti;}\r\n\r\n    public Boolean esisteUtenteDaUtente(Utente utente) {return esisteUtenteDaEmail(utente.getEmail());}\r\n    public Boolean esisteUtenteDaLogin(Login login) {return esisteUtenteDaEmail(login.getEmail());}\r\n    public Boolean esisteUtenteDaRegistrazione(Registrazione registrazione) {return esisteUtenteDaEmail(registrazione.getEmail());}\r\n    public Boolean esisteUtenteDaEmail(String email) {\r\n        for (Utente utente : utenti) {\r\n            if (utente.getEmail().equals(email)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public Boolean esisteSquadraDaNome(String nome) {\r\n        for (Utente utente : utenti) {\r\n            if (utente instanceof Allenatore allenatore) {\r\n                Squadra squadra = allenatore.getSquadra();\r\n                if (squadra.getNome().equals(nome)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public Utente getUtenteDaLogin(Login login) throws EccezioneGenerica {return getUtenteDaEmail(login.getEmail());}\r\n    public Utente getUtenteDaEmail(String email) throws EccezioneGenerica {\r\n        for (Utente utente : utenti) {\r\n            if (utente.getEmail().equals(email)) {\r\n                return utente;\r\n            }\r\n        }\r\n        throw new EccezioneGenerica(\"Utente non esistente\");\r\n    }\r\n\r\n    public void aggiungiRegistrazione(Registrazione registrazione){\r\n        if (registrazione.getAllenatore()) {\r\n            utenti.add(new Allenatore(registrazione.getUsername(),registrazione.getEmail(), registrazione.getPassword()));\r\n        } else {\r\n            utenti.add(new Giocatore(registrazione.getUsername(),registrazione.getEmail(), registrazione.getPassword()));\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/engineering/pattern/Singleton.java b/src/main/java/engineering/pattern/Singleton.java
--- a/src/main/java/engineering/pattern/Singleton.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/engineering/pattern/Singleton.java	(date 1736246944890)
@@ -16,6 +16,8 @@
 
     //variabile privata che contiene l'istanza dell'utente che sta facendo uso del sistema
     private Utente utenteCorrente;
+    //variabile che indica se il sistema è in modalità demo o meno
+    private Boolean demo;
 
     private Singleton(){}
 
@@ -38,6 +40,9 @@
     public Utente getUtenteCorrente() {return utenteCorrente;}
     public void setUtenteCorrente(Utente utente) {utenteCorrente = utente;}
 
+    public Boolean getDemo() {return demo;}
+    public void setDemo(Boolean demo) {this.demo = demo;}
+
     public List<Utente> getUtenti() {return utenti;}
 
     public Boolean esisteUtenteDaUtente(Utente utente) {return esisteUtenteDaEmail(utente.getEmail());}
Index: src/main/java/viste/first/utils/CambioScena.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package viste.first.utils;\r\n\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.util.Objects;\r\n\r\npublic class CambioScena {\r\n    public void cambioScena(Stage stage, String string) {\r\n        try {\r\n\r\n            Parent root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(string)));\r\n            stage.setScene(new Scene(root));\r\n            stage.show();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/viste/first/utils/CambioScena.java b/src/main/java/viste/first/utils/CambioScena.java
--- a/src/main/java/viste/first/utils/CambioScena.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/viste/first/utils/CambioScena.java	(date 1736189878824)
@@ -15,7 +15,8 @@
             stage.setScene(new Scene(root));
             stage.show();
         } catch (Exception e) {
-            e.printStackTrace();
+            System.out.println(e.getMessage());
+            throw new RuntimeException(e);
         }
     }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d48fabd9-9d0c-4832-9762-f7ff2f4fd62e\" name=\"Changes\" comment=\"Modifica creazione dei dao, utilizzando ora la factory. Sistemata la creazione delle squadre da parte degli allenatori\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/controllerApplicativo/CreazioneSquadraControllerApplicativo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/controllerApplicativo/CreazioneSquadraControllerApplicativo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/controllerApplicativo/LoginControllerApplicativo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/controllerApplicativo/LoginControllerApplicativo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/controllerApplicativo/RegistrazioneCtrlApplicativo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/controllerApplicativo/RegistrazioneCtrlApplicativo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/engineering/bean/RegistrazioneBean.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/engineering/bean/RegistrazioneBean.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/engineering/pattern/Singleton.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/engineering/pattern/Singleton.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/engineering/pattern/abstract_factory/DAOFactory.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/engineering/pattern/abstract_factory/DAOFactory.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/viste/first/CreazioneSquadraControllerGrafico.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/viste/first/CreazioneSquadraControllerGrafico.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/viste/first/HomepageAllenatoreGrafico.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/viste/first/HomepageAllenatoreGrafico.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/viste/first/LoginControllerGrafico.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/viste/first/LoginControllerGrafico.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/viste/first/RegistrazioneCtrlGrafico.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/viste/first/RegistrazioneCtrlGrafico.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/viste/first/utils/FxmlFileName.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/viste/first/utils/FxmlFileName.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/persistenza/utenti/1.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/persistenza/utenti/1.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/persistenza/utenti/persistenzaJson.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/persistenza/utenti/persistenzaJson.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/viste/homepageAllenatore.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/viste/homepageAllenatore.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;FrancescoMin&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/FrancescoMin/TeamTrainingHub.git&quot;,\r\n    &quot;accountId&quot;: &quot;64b32a3e-6402-44ac-8316-64089203d618&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n    <option name=\"showPreview\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nIPzptCElr3Z2cbKRrMzjtrfIO\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.LoginApplicazione.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/max/Desktop/ISPW/Ispw/Ispw/progettiOthers/Project-master/libs/mysql-connector-j-8.0.31.jar&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.48505747&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"OLDteamtraininghub\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"OLDteamtraininghub\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-fdfe4dae3a2d-intellij.indexing.shared.core-IU-243.22562.218\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-IU-243.22562.218\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d48fabd9-9d0c-4832-9762-f7ff2f4fd62e\" name=\"Changes\" comment=\"\" />\r\n      <created>1728657885128</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1728657885128</updated>\r\n      <workItem from=\"1728657886213\" duration=\"2000\" />\r\n      <workItem from=\"1730031757462\" duration=\"424000\" />\r\n      <workItem from=\"1730055384804\" duration=\"595000\" />\r\n      <workItem from=\"1730114720831\" duration=\"614000\" />\r\n      <workItem from=\"1730297470122\" duration=\"795000\" />\r\n      <workItem from=\"1730367712503\" duration=\"1261000\" />\r\n      <workItem from=\"1730900062191\" duration=\"11000\" />\r\n      <workItem from=\"1730900495932\" duration=\"139000\" />\r\n      <workItem from=\"1730900654982\" duration=\"1874000\" />\r\n      <workItem from=\"1731419658599\" duration=\"1145000\" />\r\n      <workItem from=\"1731510660528\" duration=\"565000\" />\r\n      <workItem from=\"1731513936734\" duration=\"1087000\" />\r\n      <workItem from=\"1732372725814\" duration=\"1497000\" />\r\n      <workItem from=\"1732618556068\" duration=\"9617000\" />\r\n      <workItem from=\"1732719715292\" duration=\"1949000\" />\r\n      <workItem from=\"1732787371589\" duration=\"8556000\" />\r\n      <workItem from=\"1732810871835\" duration=\"127000\" />\r\n      <workItem from=\"1733073299051\" duration=\"853000\" />\r\n      <workItem from=\"1733240050872\" duration=\"2012000\" />\r\n      <workItem from=\"1733675765565\" duration=\"234000\" />\r\n      <workItem from=\"1733845576886\" duration=\"191000\" />\r\n      <workItem from=\"1733997673195\" duration=\"1357000\" />\r\n      <workItem from=\"1734004004118\" duration=\"9782000\" />\r\n      <workItem from=\"1734084904930\" duration=\"4581000\" />\r\n      <workItem from=\"1734364185289\" duration=\"606000\" />\r\n      <workItem from=\"1734386510091\" duration=\"6108000\" />\r\n      <workItem from=\"1734427385697\" duration=\"11873000\" />\r\n      <workItem from=\"1734528607867\" duration=\"6716000\" />\r\n      <workItem from=\"1734601053904\" duration=\"981000\" />\r\n      <workItem from=\"1734685591858\" duration=\"382000\" />\r\n      <workItem from=\"1734686289666\" duration=\"16032000\" />\r\n      <workItem from=\"1734892877229\" duration=\"1451000\" />\r\n      <workItem from=\"1734966919459\" duration=\"8233000\" />\r\n      <workItem from=\"1735032977134\" duration=\"4180000\" />\r\n      <workItem from=\"1735901497067\" duration=\"2500000\" />\r\n      <workItem from=\"1735987121389\" duration=\"619000\" />\r\n      <workItem from=\"1735990839984\" duration=\"3029000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Inizio settaggio database\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730032171397</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730032171397</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"file workspace\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730299192134</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730299192136</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"commit e push di recupero\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730299261335</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730299261335</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"view della registrazione (senza controller)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730901612261</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730901612261</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Modifica di controller applicativo, grafico della registrazione e fxml della registrazione\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732726100799</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732726100800</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Typo nel package, aggiunta string password\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733074263323</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733074263323</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"rimozione stringa password, rimozione &quot;registraUtente&quot; per &quot;inserisciUtente&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733675993534</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733675993534</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"correzione typo &quot;Eccezione&quot;, modifiche RegistrazioneCtrlApplicativo, non vengono salvati i dati di registrazione\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734108476104</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734108476104</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Creazione nuova vista, altri tentativi in RegistrazioneCtrlApplicativo\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734393253773</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734393253773</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"RegistrazioneCtrlApplicativo funzionante\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734428756847</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734428756847</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Fix valori stringhe nei json\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734442708259</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734442708259</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Creazione Singleton, creazione Squadra e Allenamento, modifiche minori su json\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734608604546</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734608604546</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Modificato la rappresentazione di squadra nei file utenti in json e derivanti modifiche nei fai dao\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734989947328</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734989947328</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Modifica creazione dei dao, utilizzando ora la factory. Sistemata la creazione delle squadre da parte degli allenatori\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736183441254</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736183441254</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"15\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Inizio settaggio database\" />\r\n    <MESSAGE value=\"file workspace\" />\r\n    <MESSAGE value=\"commit e push di recupero\" />\r\n    <MESSAGE value=\"view della registrazione (senza controller)\" />\r\n    <MESSAGE value=\"Modifica di controller applicativo, grafico della registrazione e fxml della registrazione\" />\r\n    <MESSAGE value=\"Typo nel package, aggiunta string password\" />\r\n    <MESSAGE value=\"rimozione stringa password, rimozione &quot;registraUtente&quot; per &quot;inserisciUtente&quot;\" />\r\n    <MESSAGE value=\"correzione typo &quot;Eccezione&quot;, modifiche RegistrazioneCtrlApplicativo, non vengono salvati i dati di registrazione\" />\r\n    <MESSAGE value=\"Creazione nuova vista, altri tentativi in RegistrazioneCtrlApplicativo\" />\r\n    <MESSAGE value=\"RegistrazioneCtrlApplicativo funzionante\" />\r\n    <MESSAGE value=\"Fix valori stringhe nei json\" />\r\n    <MESSAGE value=\"Creazione Singleton, creazione Squadra e Allenamento, modifiche minori su json\" />\r\n    <MESSAGE value=\"Modificato la rappresentazione di squadra nei file utenti in json e derivanti modifiche nei fai dao\" />\r\n    <MESSAGE value=\"Modifica creazione dei dao, utilizzando ora la factory. Sistemata la creazione delle squadre da parte degli allenatori\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Modifica creazione dei dao, utilizzando ora la factory. Sistemata la creazione delle squadre da parte degli allenatori\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/.idea/workspace.xml	(date 1736258115839)
@@ -4,23 +4,30 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="d48fabd9-9d0c-4832-9762-f7ff2f4fd62e" name="Changes" comment="Modifica creazione dei dao, utilizzando ora la factory. Sistemata la creazione delle squadre da parte degli allenatori">
+    <list default="true" id="d48fabd9-9d0c-4832-9762-f7ff2f4fd62e" name="Changes" comment="modifica cambio di scena tra login e schermate Home, Registrazione e schermate Home e tra HomeAllenatore e Login">
+      <change afterPath="$PROJECT_DIR$/src/main/java/viste/first/HomepageAllenatoreGraficoGrafico.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/controllerApplicativo/CreazioneSquadraControllerApplicativo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllerApplicativo/CreazioneSquadraControllerApplicativo.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplicativo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllerApplicativo/CreazioneAllenamentoControllerApplicativo.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllerApplicativo/HomepageAllenatoreControllerApplicativo.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/controllerApplicativo/LoginControllerApplicativo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllerApplicativo/LoginControllerApplicativo.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/controllerApplicativo/RegistrazioneCtrlApplicativo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controllerApplicativo/RegistrazioneCtrlApplicativo.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/engineering/bean/RegistrazioneBean.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/engineering/bean/RegistrazioneBean.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/engineering/dao/AllenamentoDAOJSON.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/engineering/dao/AllenamentoDAOJSON.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/engineering/pattern/Singleton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/engineering/pattern/Singleton.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/engineering/pattern/abstract_factory/DAOFactory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/engineering/pattern/abstract_factory/DAOFactory.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/engineering/query/QueryAllenamento.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/engineering/query/QueryAllenamento.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/engineering/query/QuerySquadra.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/engineering/query/QuerySquadra.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/inizio/LoginApplicazione.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/inizio/LoginApplicazione.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/modelli/Allenamento.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/modelli/Allenamento.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/viste/first/CreazioneAllenamentoControllerGrafico.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/viste/first/CreazioneSquadraControllerGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/viste/first/CreazioneSquadraControllerGrafico.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/viste/first/HomepageAllenatoreGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/viste/first/HomepageAllenatoreGrafico.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/viste/first/HomepageAllenatoreGrafico.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/viste/first/HomepageGiocatoreCtrlGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/viste/first/HomepageGiocatoreCtrlGrafico.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/viste/first/LoginControllerGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/viste/first/LoginControllerGrafico.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/viste/first/RegistrazioneCtrlGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/viste/first/RegistrazioneCtrlGrafico.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/viste/first/utils/CambioScena.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/viste/first/utils/CambioScena.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/viste/first/utils/FxmlFileName.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/viste/first/utils/FxmlFileName.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/persistenza/utenti/1.json" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/persistenza/utenti/1.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/persistenza/utenti/persistenzaJson.json" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/persistenza/utenti/persistenzaJson.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/persistenza/allenamenti/13-9-2050.json" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/persistenza/allenamenti/19-9-2039.json" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/resources/viste/homepageAllenatore.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/viste/homepageAllenatore.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/viste/homepageGiocatore.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/viste/homepageGiocatore.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -31,8 +38,8 @@
     <option name="RECENT_TEMPLATES">
       <list>
         <option value="Interface" />
-        <option value="FxmlFile" />
         <option value="Enum" />
+        <option value="FxmlFile" />
         <option value="Class" />
       </list>
     </option>
@@ -155,6 +162,8 @@
       <workItem from="1735901497067" duration="2500000" />
       <workItem from="1735987121389" duration="619000" />
       <workItem from="1735990839984" duration="3029000" />
+      <workItem from="1736240753936" duration="9722000" />
+      <workItem from="1736256251967" duration="1857000" />
     </task>
     <task id="LOCAL-00001" summary="Inizio settaggio database">
       <option name="closed" value="true" />
@@ -268,7 +277,15 @@
       <option name="project" value="LOCAL" />
       <updated>1736183441254</updated>
     </task>
-    <option name="localTasksCounter" value="15" />
+    <task id="LOCAL-00015" summary="modifica cambio di scena tra login e schermate Home, Registrazione e schermate Home e tra HomeAllenatore e Login">
+      <option name="closed" value="true" />
+      <created>1736189522967</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL-00015" />
+      <option name="project" value="LOCAL" />
+      <updated>1736189522967</updated>
+    </task>
+    <option name="localTasksCounter" value="16" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -300,6 +317,7 @@
     <MESSAGE value="Creazione Singleton, creazione Squadra e Allenamento, modifiche minori su json" />
     <MESSAGE value="Modificato la rappresentazione di squadra nei file utenti in json e derivanti modifiche nei fai dao" />
     <MESSAGE value="Modifica creazione dei dao, utilizzando ora la factory. Sistemata la creazione delle squadre da parte degli allenatori" />
-    <option name="LAST_COMMIT_MESSAGE" value="Modifica creazione dei dao, utilizzando ora la factory. Sistemata la creazione delle squadre da parte degli allenatori" />
+    <MESSAGE value="modifica cambio di scena tra login e schermate Home, Registrazione e schermate Home e tra HomeAllenatore e Login" />
+    <option name="LAST_COMMIT_MESSAGE" value="modifica cambio di scena tra login e schermate Home, Registrazione e schermate Home e tra HomeAllenatore e Login" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/engineering/query/QueryAllenamento.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package engineering.query;\r\n\r\nimport engineering.altro.Connessione;\r\nimport engineering.eccezioni.EccezioneGenerica;\r\nimport modelli.Allenamento;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\n\r\npublic class QueryAllenamento {\r\n\r\n    public static String creaAllenamentoQuery = \"INSERT INTO allenamento (data,durata, descrizione, utenti_email) VALUES (?, ?, ? ,? )\";\r\n\r\n    public static int createAllenamento(Connection connection, Allenamento allenamento , String utenti_email) throws EccezioneGenerica {\r\n        try {\r\n\r\n            //creazione della query parametrica\r\n\r\n\r\n            //preparazione dello statement\r\n            Connection conn = Connessione.getInstance().getDBConnection();\r\n            PreparedStatement statement = conn.prepareStatement(creaAllenamentoQuery);\r\n\r\n            //setting dei parametri della query\r\n            statement.setString(1, allenamento.getData());\r\n            statement.setString(2, String.valueOf(allenamento.getDurata()));\r\n            statement.setString(3, allenamento.getDescrizione());\r\n            statement.setString(4, utenti_email);\r\n\r\n            //esecuzione della query e restituzione del risultato\r\n            int i=0;\r\n\r\n            System.out.println(\"email: \"+utenti_email + \" inserito per allenamento in data: \"+allenamento.getData() + \" con durata: \"+allenamento.getDurata() + \" e descrizione: \"+allenamento.getDescrizione());\r\n            i=statement.executeUpdate();\r\n            return  i;\r\n\r\n\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            throw new EccezioneGenerica(e.getMessage());\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/engineering/query/QueryAllenamento.java b/src/main/java/engineering/query/QueryAllenamento.java
--- a/src/main/java/engineering/query/QueryAllenamento.java	(revision 6b771c8e847e2acb347827e756cc14479042d30c)
+++ b/src/main/java/engineering/query/QueryAllenamento.java	(date 1736189968766)
@@ -37,7 +37,7 @@
 
 
         } catch (SQLException e) {
-            e.printStackTrace();
+            System.out.println(e.getMessage());
             throw new EccezioneGenerica(e.getMessage());
         }
     }
